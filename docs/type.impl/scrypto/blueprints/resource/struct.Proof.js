(function() {var type_impls = {
"scrypto":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#impl-Hash-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"scrypto/prelude/trait.Sized.html\" title=\"trait scrypto::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CScryptoCustomValueKind,+D%3E-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#94\">source</a><a href=\"#impl-Decode%3CScryptoCustomValueKind,+D%3E-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>, D&gt; for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a><div class=\"where\">where\n    D: <a class=\"trait\" href=\"scrypto/prelude/trait.Decoder.html\" title=\"trait scrypto::prelude::Decoder\">Decoder</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#95-98\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.DecodeError.html\" title=\"enum scrypto::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<ScryptoCustomValueKind, D>","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CScryptoCustomTypeKind%3E-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#103\">source</a><a href=\"#impl-Describe%3CScryptoCustomTypeKind%3E-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomTypeKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomTypeKind\">ScryptoCustomTypeKind</a>&gt; for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#104\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#107\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto/prelude/struct.TypeData.html\" title=\"struct scrypto::prelude::TypeData\">TypeData</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomTypeKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomTypeKind\">ScryptoCustomTypeKind</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/schema/describe.rs.html#59\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/struct.TypeAggregator.html\" title=\"struct scrypto::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<ScryptoCustomTypeKind>","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CScryptoCustomValueKind,+E%3E-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#82\">source</a><a href=\"#impl-Encode%3CScryptoCustomValueKind,+E%3E-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;E&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>, E&gt; for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"scrypto/prelude/trait.Encoder.html\" title=\"trait scrypto::prelude::Encoder\">Encoder</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#84\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#89\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<ScryptoCustomValueKind, E>","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<section id=\"impl-Eq-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#impl-Eq-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Eq.html\" title=\"trait scrypto::prelude::Eq\">Eq</a> for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section>","Eq","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFungibleProof%3E-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#59\">source</a><a href=\"#impl-From%3CFungibleProof%3E-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"scrypto/blueprints/resource/struct.FungibleProof.html\" title=\"struct scrypto::blueprints::resource::FungibleProof\">FungibleProof</a>&gt; for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#60\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.FungibleProof.html\" title=\"struct scrypto::blueprints::resource::FungibleProof\">FungibleProof</a>) -&gt; <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FungibleProof>","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonFungibleProof%3E-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#65\">source</a><a href=\"#impl-From%3CNonFungibleProof%3E-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"scrypto/blueprints/resource/struct.NonFungibleProof.html\" title=\"struct scrypto::blueprints::resource::NonFungibleProof\">NonFungibleProof</a>&gt; for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#66\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.NonFungibleProof.html\" title=\"struct scrypto::blueprints::resource::NonFungibleProof\">NonFungibleProof</a>) -&gt; <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonFungibleProof>","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#impl-Debug-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Debug.html\" title=\"trait scrypto::prelude::Debug\">Debug</a> for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<section id=\"impl-StructuralPartialEq-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#impl-StructuralPartialEq-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section>","StructuralPartialEq","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#impl-PartialEq-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#45\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CScryptoCustomValueKind%3E-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#75\">source</a><a href=\"#impl-Categorize%3CScryptoCustomValueKind%3E-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>&gt; for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/blueprints/resource/proof.rs.html#77\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;<a class=\"enum\" href=\"scrypto/data/scrypto/enum.ScryptoCustomValueKind.html\" title=\"enum scrypto::data::scrypto::ScryptoCustomValueKind\">ScryptoCustomValueKind</a>&gt;</h4></section></div></details>","Categorize<ScryptoCustomValueKind>","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ScryptoUncheckedProof-for-Proof\" class=\"impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#133-219\">source</a><a href=\"#impl-ScryptoUncheckedProof-for-Proof\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html\" title=\"trait scrypto::resource::proof::ScryptoUncheckedProof\">ScryptoUncheckedProof</a> for <a class=\"struct\" href=\"scrypto/blueprints/resource/struct.Proof.html\" title=\"struct scrypto::blueprints::resource::Proof\">Proof</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.CheckedProofType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CheckedProofType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#associatedtype.CheckedProofType\" class=\"associatedtype\">CheckedProofType</a> = <a class=\"struct\" href=\"scrypto/resource/proof/struct.CheckedProof.html\" title=\"struct scrypto::resource::proof::CheckedProof\">CheckedProof</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.check\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#136-147\">source</a><a href=\"#method.check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.check\" class=\"fn\">check</a>(self, expected_resource_address: <a class=\"struct\" href=\"scrypto/types/struct.ResourceAddress.html\" title=\"struct scrypto::types::ResourceAddress\">ResourceAddress</a>) -&gt; <a class=\"struct\" href=\"scrypto/resource/proof/struct.CheckedProof.html\" title=\"struct scrypto::resource::proof::CheckedProof\">CheckedProof</a></h4></section></summary><div class='docblock'>Checks the resource address of this proof and panics if it’s unexpected.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_with_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#149-161\">source</a><a href=\"#method.check_with_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.check_with_message\" class=\"fn\">check_with_message</a>&lt;S: <a class=\"trait\" href=\"scrypto/prelude/trait.ToString.html\" title=\"trait scrypto::prelude::ToString\">ToString</a>&gt;(\n    self,\n    expected_resource_address: <a class=\"struct\" href=\"scrypto/types/struct.ResourceAddress.html\" title=\"struct scrypto::types::ResourceAddress\">ResourceAddress</a>,\n    custom_error_message: S\n) -&gt; <a class=\"struct\" href=\"scrypto/resource/proof/struct.CheckedProof.html\" title=\"struct scrypto::resource::proof::CheckedProof\">CheckedProof</a></h4></section></summary><div class='docblock'>Checks the resource address of this proof and panics with custom error message if it’s unexpected.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_checking\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#163-165\">source</a><a href=\"#method.skip_checking\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.skip_checking\" class=\"fn\">skip_checking</a>(self) -&gt; <a class=\"struct\" href=\"scrypto/resource/proof/struct.CheckedProof.html\" title=\"struct scrypto::resource::proof::CheckedProof\">CheckedProof</a></h4></section></summary><div class='docblock'>Skips checking and converts this proof into a “checked” proof. <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.skip_checking\">Read more</a></div></details><section id=\"method.resource_address\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#167-174\">source</a><a href=\"#method.resource_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.resource_address\" class=\"fn\">resource_address</a>(&amp;self) -&gt; <a class=\"struct\" href=\"scrypto/types/struct.ResourceAddress.html\" title=\"struct scrypto::types::ResourceAddress\">ResourceAddress</a></h4></section><section id=\"method.resource_manager\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#176-178\">source</a><a href=\"#method.resource_manager\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#method.resource_manager\" class=\"fn\">resource_manager</a>(&amp;self) -&gt; <a class=\"struct\" href=\"scrypto/resource/resource_manager/struct.ResourceManager.html\" title=\"struct scrypto::resource::resource_manager::ResourceManager\">ResourceManager</a></h4></section><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#180-200\">source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.drop\" class=\"fn\">drop</a>(self)</h4></section><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#202-209\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section><section id=\"method.authorize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scrypto/resource/proof.rs.html#211-218\">source</a><a href=\"#method.authorize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/resource/proof/trait.ScryptoUncheckedProof.html#tymethod.authorize\" class=\"fn\">authorize</a>&lt;F: <a class=\"trait\" href=\"scrypto/prelude/trait.FnOnce.html\" title=\"trait scrypto::prelude::FnOnce\">FnOnce</a>() -&gt; O, O&gt;(&amp;self, f: F) -&gt; O</h4></section></div></details>","ScryptoUncheckedProof","scrypto::blueprints::resource::AuthZoneCreateProofOfAmountOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::AuthZoneCreateProofOfAllOutput","scrypto::blueprints::resource::BucketCreateProofOfAllOutput","scrypto::blueprints::resource::FungibleBucketCreateProofOfAmountOutput","scrypto::blueprints::resource::FungibleVaultCreateProofOfAmountOutput","scrypto::blueprints::resource::NonFungibleBucketCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::NonFungibleVaultCreateProofOfNonFungiblesOutput","scrypto::blueprints::resource::ProofCloneOutput","scrypto::blueprints::access_controller::AccessControllerCreateProofOutput","scrypto::blueprints::account::AccountCreateProofOfAmountOutput","scrypto::blueprints::account::AccountCreateProofOfNonFungiblesOutput"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()