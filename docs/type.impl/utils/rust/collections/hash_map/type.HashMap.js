(function() {var type_impls = {
"radix_engine_stores":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInternalNode%3E-for-HashMap%3CNibble,+Child%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_stores/hash_tree/types.rs.html#1135-1139\">source</a><a href=\"#impl-From%3CInternalNode%3E-for-HashMap%3CNibble,+Child%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"radix_engine_stores/hash_tree/types/struct.InternalNode.html\" title=\"struct radix_engine_stores::hash_tree::types::InternalNode\">InternalNode</a>&gt; for HashMap&lt;<a class=\"struct\" href=\"radix_engine_stores/hash_tree/tree_store/struct.Nibble.html\" title=\"struct radix_engine_stores::hash_tree::tree_store::Nibble\">Nibble</a>, <a class=\"struct\" href=\"radix_engine_stores/hash_tree/types/struct.Child.html\" title=\"struct radix_engine_stores::hash_tree::types::Child\">Child</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_stores/hash_tree/types.rs.html#1136-1138\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(node: <a class=\"struct\" href=\"radix_engine_stores/hash_tree/types/struct.InternalNode.html\" title=\"struct radix_engine_stores::hash_tree::types::InternalNode\">InternalNode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InternalNode>","radix_engine_stores::hash_tree::types::Children"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()