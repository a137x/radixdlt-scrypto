(function() {var type_impls = {
"scrypto_test":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawPayload%3C'a,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#22\">source</a><a href=\"#impl-RawPayload%3C'a,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, E&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_valid_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#29\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.new_from_valid_slice\" class=\"fn\">new_from_valid_slice</a>(payload_bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;</h4></section></summary><div class=\"docblock\"><p>The bytes should include the prefix byte (eg 0x5b for basic SBOR).</p>\n<p>It is the caller’s responsibility to ensure that a valid SBOR payload for extension E is\npassed to the caller.</p>\n<p>This constructor does not check the prefix byte, and panics if the root value kind is invalid.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_valid_slice_with_checks\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#44\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.new_from_valid_slice_with_checks\" class=\"fn\">new_from_valid_slice_with_checks</a>(\n    payload_bytes: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The bytes should include the prefix byte (eg 0x5b for basic SBOR).</p>\n<p>It is the caller’s responsibility to ensure that a valid SBOR payload for extension E is\npassed to the caller.</p>\n<p>Unlike <code>new_from_valid_payload_bytes</code>, the constructor includes a prefix byte check to hopefully\ncatch some errors - but it is not guaranteed to catch all errors.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_valid_owned\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#64\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.new_from_valid_owned\" class=\"fn\">new_from_valid_owned</a>(payload_bytes: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;</h4></section></summary><div class=\"docblock\"><p>The bytes should include the prefix byte (eg 0x5b for basic SBOR).</p>\n<p>It is the caller’s responsibility to ensure that a valid SBOR payload for extension E is\npassed to the caller.</p>\n<p>This constructor does not check the prefix byte, and panics if the root value kind is invalid.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_valid_owned_with_checks\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#80\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.new_from_valid_owned_with_checks\" class=\"fn\">new_from_valid_owned_with_checks</a>(\n    payload_bytes: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The bytes should include the prefix byte (eg 0x5b for basic SBOR).</p>\n<p>It is the caller’s responsibility to ensure that a valid SBOR payload for extension E is\npassed to the caller.</p>\n<p>Unlike <code>new_from_valid_payload_bytes</code>, the constructor includes a prefix byte check to hopefully\ncatch some errors - but it is not guaranteed to catch all errors.</p>\n</div></details><section id=\"method.as_encoded_value\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#94\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.as_encoded_value\" class=\"fn\">as_encoded_value</a>&lt;'b&gt;(&amp;'b self) -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawValue.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawValue\">RawValue</a>&lt;'b, E&gt;</h4></section><section id=\"method.decode_into\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#101-106\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.decode_into\" class=\"fn\">decode_into</a>&lt;T&gt;(&amp;self, depth_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    T: for&lt;'b&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;&lt;E as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html#associatedtype.CustomValueKind\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::CustomExtension::CustomValueKind\">CustomValueKind</a>, <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.VecDecoder.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::VecDecoder\">VecDecoder</a>&lt;'b, &lt;E as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html#associatedtype.CustomValueKind\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::CustomExtension::CustomValueKind\">CustomValueKind</a>&gt;&gt;,</div></h4></section><section id=\"method.root_value_kind\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#111\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.root_value_kind\" class=\"fn\">root_value_kind</a>(\n    &amp;self\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;&lt;E as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html#associatedtype.CustomValueKind\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::CustomExtension::CustomValueKind\">CustomValueKind</a>&gt;</h4></section><section id=\"method.payload_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#115\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.payload_bytes\" class=\"fn\">payload_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section><section id=\"method.encoded_root_value_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#119\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.encoded_root_value_bytes\" class=\"fn\">encoded_root_value_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section><section id=\"method.encoded_root_body_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#123\">source</a><h4 class=\"code-header\">pub fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html#tymethod.encoded_root_body_bytes\" class=\"fn\">encoded_root_body_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></div></details>",0,"scrypto_test::prelude::radix_engine_common::prelude::BasicRawPayload","scrypto_test::prelude::radix_engine_common::prelude::BasicOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::RawScryptoPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-RawPayload%3C'a,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#128\">source</a><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-RawPayload%3C'a,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, E&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#131\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt;, &lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'a, E&gt; as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a [u8]>","scrypto_test::prelude::radix_engine_common::prelude::BasicRawPayload","scrypto_test::prelude::radix_engine_common::prelude::BasicOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::RawScryptoPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3C%3CExt+as+CustomExtension%3E::CustomValueKind,+E%3E-for-RawPayload%3C'_,+Ext%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#136-137\">source</a><a href=\"#impl-Encode%3C%3CExt+as+CustomExtension%3E::CustomValueKind,+E%3E-for-RawPayload%3C'_,+Ext%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ext, E&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;&lt;Ext as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html#associatedtype.CustomValueKind\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::CustomExtension::CustomValueKind\">CustomValueKind</a>, E&gt; for <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'_, Ext&gt;<div class=\"where\">where\n    Ext: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>,\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Encoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Encoder\">Encoder</a>&lt;&lt;Ext as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomExtension\">CustomExtension</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomExtension.html#associatedtype.CustomValueKind\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::CustomExtension::CustomValueKind\">CustomValueKind</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#139\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/encoded_wrappers.rs.html#143\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<<Ext as CustomExtension>::CustomValueKind, E>","scrypto_test::prelude::radix_engine_common::prelude::BasicRawPayload","scrypto_test::prelude::radix_engine_common::prelude::BasicOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::RawScryptoPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContextualSerialize%3CSerializationParameters%3C's,+'a,+E%3E%3E-for-RawPayload%3C'b,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/representations/serde_serialization/contextual_serialize.rs.html#58-59\">source</a><a href=\"#impl-ContextualSerialize%3CSerializationParameters%3C's,+'a,+E%3E%3E-for-RawPayload%3C'b,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, 'a, 'b, E&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualSerialize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextualSerialize\">ContextualSerialize</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/enum.SerializationParameters.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::representations::SerializationParameters\">SerializationParameters</a>&lt;'s, 'a, E&gt;&gt; for <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'b, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/trait.SerializableCustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::representations::SerializableCustomExtension\">SerializableCustomExtension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contextual_serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/representations/serde_serialization/contextual_serialize.rs.html#61-65\">source</a><a href=\"#method.contextual_serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualSerialize.html#tymethod.contextual_serialize\" class=\"fn\">contextual_serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n    context: &amp;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/enum.SerializationParameters.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::representations::SerializationParameters\">SerializationParameters</a>&lt;'s, 'a, E&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serializes the value to the given <code>serde::Serializer</code>, making use of the provided context.\nSee also <a href=\"#method.serialize\"><code>serialize</code></a>, which is typically easier to use, as it takes an <code>Into&lt;Context&gt;</code>\ninstead of a <code>&amp;Context</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualSerialize.html#tymethod.contextual_serialize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualSerialize.html#method.serialize\" class=\"fn\">serialize</a>&lt;S, TContext&gt;(\n    &amp;self,\n    serializer: S,\n    context: TContext\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,\n    TContext: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Into.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Into\">Into</a>&lt;Context&gt;,</div></h4></section></summary><div class='docblock'>Serializes the value to the given <code>serde::Serializer</code>, making use of the provided context.\nSee also <a href=\"#method.contextual_serialize\"><code>contextual_serialize</code></a>, which takes a <code>&amp;Context</code> instead of an <code>Into&lt;Context&gt;</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualSerialize.html#method.serialize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a href=\"#method.serializable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualSerialize.html#method.serializable\" class=\"fn\">serializable</a>&lt;TContext, 'a, 'b&gt;(\n    &amp;'a self,\n    context: TContext\n) -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.ContextSerializable.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextSerializable\">ContextSerializable</a>&lt;'a, Self, Context&gt;<div class=\"where\">where\n    TContext: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Into.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Into\">Into</a>&lt;Context&gt;,</div></h4></section></summary><div class='docblock'>Returns an object implementing <code>serde::Serialize</code>, which can be passed to <code>serde</code> functions.</div></details></div></details>","ContextualSerialize<SerializationParameters<'s, 'a, E>>","scrypto_test::prelude::radix_engine_common::prelude::BasicRawPayload","scrypto_test::prelude::radix_engine_common::prelude::BasicOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::RawScryptoPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContextualDisplay%3CValueDisplayParameters%3C's,+'a,+E%3E%3E-for-RawPayload%3C'b,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/representations/display/contextual_display.rs.html#132-133\">source</a><a href=\"#impl-ContextualDisplay%3CValueDisplayParameters%3C's,+'a,+E%3E%3E-for-RawPayload%3C'b,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, 'a, 'b, E&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextualDisplay\">ContextualDisplay</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/enum.ValueDisplayParameters.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::representations::ValueDisplayParameters\">ValueDisplayParameters</a>&lt;'s, 'a, E&gt;&gt; for <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'b, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/trait.FormattableCustomExtension.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::representations::FormattableCustomExtension\">FormattableCustomExtension</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/enum.FormattingError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::representations::FormattingError\">FormattingError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.contextual_format\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/representations/display/contextual_display.rs.html#137-141\">source</a><a href=\"#method.contextual_format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#tymethod.contextual_format\" class=\"fn\">contextual_format</a>&lt;F&gt;(\n    &amp;self,\n    f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut F</a>,\n    options: &amp;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/enum.ValueDisplayParameters.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::representations::ValueDisplayParameters\">ValueDisplayParameters</a>&lt;'s, 'a, E&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.RawPayload.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::RawPayload\">RawPayload</a>&lt;'b, E&gt; as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextualDisplay\">ContextualDisplay</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/representations/enum.ValueDisplayParameters.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::representations::ValueDisplayParameters\">ValueDisplayParameters</a>&lt;'s, 'a, E&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#associatedtype.Error\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextualDisplay::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/trait.Write.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Formats the value to the given <code>fmt::Write</code> buffer, making use of the provided context.\nSee also <a href=\"#method.format\"><code>format</code></a>, which is typically easier to use, as it takes an <code>Into&lt;Context&gt;</code>\ninstead of a <code>&amp;Context</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.format\" class=\"method trait-impl\"><a href=\"#method.format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#method.format\" class=\"fn\">format</a>&lt;F, TContext&gt;(\n    &amp;self,\n    f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut F</a>,\n    context: TContext\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#associatedtype.Error\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextualDisplay::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/trait.Write.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::fmt::Write\">Write</a>,\n    TContext: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Into.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Into\">Into</a>&lt;Context&gt;,</div></h4></section></summary><div class='docblock'>Formats the value to the given <code>fmt::Write</code> buffer, making use of the provided context.\nSee also <a href=\"#method.contextual_format\"><code>contextual_format</code></a>, which takes a <code>&amp;Context</code> instead of an <code>Into&lt;Context&gt;</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#method.format\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display\" class=\"method trait-impl\"><a href=\"#method.display\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#method.display\" class=\"fn\">display</a>&lt;TContext, 'a, 'b&gt;(\n    &amp;'a self,\n    context: TContext\n) -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.ContextDisplayable.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::ContextDisplayable\">ContextDisplayable</a>&lt;'a, Self, Context&gt;<div class=\"where\">where\n    TContext: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Into.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Into\">Into</a>&lt;Context&gt;,</div></h4></section></summary><div class='docblock'>Returns an object implementing <code>fmt::Display</code>, which can be used in a <code>format!</code> style macro. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#method.display\">Read more</a></div></details><section id=\"method.to_string\" class=\"method trait-impl\"><a href=\"#method.to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.ContextualDisplay.html#method.to_string\" class=\"fn\">to_string</a>&lt;TContext, 'a, 'b&gt;(&amp;'a self, context: TContext) -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.String.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::String\">String</a><div class=\"where\">where\n    TContext: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Into.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Into\">Into</a>&lt;Context&gt;,</div></h4></section></div></details>","ContextualDisplay<ValueDisplayParameters<'s, 'a, E>>","scrypto_test::prelude::radix_engine_common::prelude::BasicRawPayload","scrypto_test::prelude::radix_engine_common::prelude::BasicOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ManifestOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoRawPayload","scrypto_test::prelude::radix_engine_common::prelude::ScryptoOwnedRawPayload","scrypto_test::prelude::radix_engine_common::prelude::RawScryptoPayload"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()