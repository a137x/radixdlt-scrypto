(function() {var type_impls = {
"radix_engine":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CManifestArgs%3E-for-Value%3CManifestCustomValueKind,+ManifestCustomValue%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_common/data/manifest/definitions.rs.html#70\">source</a><a href=\"#impl-From%3CManifestArgs%3E-for-Value%3CManifestCustomValueKind,+ManifestCustomValue%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.ManifestArgs.html\" title=\"struct radix_engine::types::ManifestArgs\">ManifestArgs</a>&gt; for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValueKind.html\" title=\"enum radix_engine::types::ManifestCustomValueKind\">ManifestCustomValueKind</a>, <a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValue.html\" title=\"enum radix_engine::types::ManifestCustomValue\">ManifestCustomValue</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_common/data/manifest/definitions.rs.html#71\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    value: <a class=\"struct\" href=\"radix_engine/types/struct.ManifestArgs.html\" title=\"struct radix_engine::types::ManifestArgs\">ManifestArgs</a>\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValueKind.html\" title=\"enum radix_engine::types::ManifestCustomValueKind\">ManifestCustomValueKind</a>, <a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValue.html\" title=\"enum radix_engine::types::ManifestCustomValue\">ManifestCustomValue</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ManifestArgs>","radix_engine::types::ManifestValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#impl-PartialEq-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y&gt; <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#243-244\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, Y&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine/types/trait.Decoder.html\" title=\"trait radix_engine::types::Decoder\">Decoder</a>&lt;X&gt;,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#247-250\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;, <a class=\"enum\" href=\"radix_engine/types/enum.DecodeError.html\" title=\"enum radix_engine::types::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#impl-Debug-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Debug.html\" title=\"trait radix_engine::types::Debug\">Debug</a> for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.Debug.html\" title=\"trait radix_engine::types::Debug\">Debug</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.Debug.html\" title=\"trait radix_engine::types::Debug\">Debug</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine/types/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#345-346\">source</a><a href=\"#impl-Describe%3CC%3E-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y, C&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt; for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,\n    C: <a class=\"trait\" href=\"radix_engine/types/trait.CustomTypeKind.html\" title=\"trait radix_engine::types::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#348\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#350\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.TypeData.html\" title=\"struct radix_engine::types::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/schema/describe.rs.html#59\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine/types/struct.TypeAggregator.html\" title=\"struct radix_engine::types::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<section id=\"impl-StructuralPartialEq-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#impl-StructuralPartialEq-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section>","StructuralPartialEq","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#110-111\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, Y&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine/types/trait.Encoder.html\" title=\"trait radix_engine::types::Encoder\">Encoder</a>&lt;X&gt;,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#114\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#137\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#18\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, X, Y&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#18\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#18\">source</a><a href=\"#impl-Serialize-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#18\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<section id=\"impl-Eq-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#impl-Eq-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Eq.html\" title=\"trait radix_engine::types::Eq\">Eq</a> for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.Eq.html\" title=\"trait radix_engine::types::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.Eq.html\" title=\"trait radix_engine::types::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section>","Eq","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Value%3CX,+Y%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#impl-Clone-for-Value%3CX,+Y%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, Y&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Clone.html\" title=\"trait radix_engine::types::Clone\">Clone</a> for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.Clone.html\" title=\"trait radix_engine::types::Clone\">Clone</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    Y: <a class=\"trait\" href=\"radix_engine/types/trait.Clone.html\" title=\"trait radix_engine::types::Clone\">Clone</a> + <a class=\"trait\" href=\"radix_engine/types/trait.CustomValue.html\" title=\"trait radix_engine::types::CustomValue\">CustomValue</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/value.rs.html#21\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;X, Y&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine/types/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine/types/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine::types::NonFungibleResourceManagerGetNonFungibleOutput","radix_engine::types::ManifestValue","radix_engine::types::ScryptoValue","radix_engine::types::BasicValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContextualDisplay%3CManifestDecompilationDisplayContext%3C'a%3E%3E-for-Value%3CManifestCustomValueKind,+ManifestCustomValue%3E\" class=\"impl\"><a href=\"#impl-ContextualDisplay%3CManifestDecompilationDisplayContext%3C'a%3E%3E-for-Value%3CManifestCustomValueKind,+ManifestCustomValue%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"radix_engine/types/trait.ContextualDisplay.html\" title=\"trait radix_engine::types::ContextualDisplay\">ContextualDisplay</a>&lt;ManifestDecompilationDisplayContext&lt;'a&gt;&gt; for <a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValueKind.html\" title=\"enum radix_engine::types::ManifestCustomValueKind\">ManifestCustomValueKind</a>, <a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValue.html\" title=\"enum radix_engine::types::ManifestCustomValue\">ManifestCustomValue</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.ContextualDisplay.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Error\">Error</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.contextual_format\" class=\"method trait-impl\"><a href=\"#method.contextual_format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.ContextualDisplay.html#tymethod.contextual_format\" class=\"fn\">contextual_format</a>&lt;F&gt;(\n    &amp;self,\n    f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut F</a>,\n    context: &amp;ManifestDecompilationDisplayContext&lt;'a&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, &lt;<a class=\"enum\" href=\"radix_engine/types/enum.Value.html\" title=\"enum radix_engine::types::Value\">Value</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValueKind.html\" title=\"enum radix_engine::types::ManifestCustomValueKind\">ManifestCustomValueKind</a>, <a class=\"enum\" href=\"radix_engine/types/enum.ManifestCustomValue.html\" title=\"enum radix_engine::types::ManifestCustomValue\">ManifestCustomValue</a>&gt; as <a class=\"trait\" href=\"radix_engine/types/trait.ContextualDisplay.html\" title=\"trait radix_engine::types::ContextualDisplay\">ContextualDisplay</a>&lt;ManifestDecompilationDisplayContext&lt;'a&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/trait.ContextualDisplay.html#associatedtype.Error\" title=\"type radix_engine::types::ContextualDisplay::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/trait.Write.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Formats the value to the given <code>fmt::Write</code> buffer, making use of the provided context.\nSee also <a href=\"#method.format\"><code>format</code></a>, which is typically easier to use, as it takes an <code>Into&lt;Context&gt;</code>\ninstead of a <code>&amp;Context</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.format\" class=\"method trait-impl\"><a href=\"#method.format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.ContextualDisplay.html#method.format\" class=\"fn\">format</a>&lt;F, TContext&gt;(\n    &amp;self,\n    f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut F</a>,\n    context: TContext\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"radix_engine/types/trait.ContextualDisplay.html#associatedtype.Error\" title=\"type radix_engine::types::ContextualDisplay::Error\">Error</a>&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/trait.Write.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::fmt::Write\">Write</a>,\n    TContext: <a class=\"trait\" href=\"radix_engine/types/trait.Into.html\" title=\"trait radix_engine::types::Into\">Into</a>&lt;Context&gt;,</div></h4></section></summary><div class='docblock'>Formats the value to the given <code>fmt::Write</code> buffer, making use of the provided context.\nSee also <a href=\"#method.contextual_format\"><code>contextual_format</code></a>, which takes a <code>&amp;Context</code> instead of an <code>Into&lt;Context&gt;</code>. <a href=\"radix_engine/types/trait.ContextualDisplay.html#method.format\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display\" class=\"method trait-impl\"><a href=\"#method.display\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.ContextualDisplay.html#method.display\" class=\"fn\">display</a>&lt;TContext, 'a, 'b&gt;(\n    &amp;'a self,\n    context: TContext\n) -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.ContextDisplayable.html\" title=\"struct radix_engine::types::ContextDisplayable\">ContextDisplayable</a>&lt;'a, Self, Context&gt;<div class=\"where\">where\n    TContext: <a class=\"trait\" href=\"radix_engine/types/trait.Into.html\" title=\"trait radix_engine::types::Into\">Into</a>&lt;Context&gt;,</div></h4></section></summary><div class='docblock'>Returns an object implementing <code>fmt::Display</code>, which can be used in a <code>format!</code> style macro. <a href=\"radix_engine/types/trait.ContextualDisplay.html#method.display\">Read more</a></div></details><section id=\"method.to_string\" class=\"method trait-impl\"><a href=\"#method.to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.ContextualDisplay.html#method.to_string\" class=\"fn\">to_string</a>&lt;TContext, 'a, 'b&gt;(&amp;'a self, context: TContext) -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.String.html\" title=\"struct radix_engine::types::String\">String</a><div class=\"where\">where\n    TContext: <a class=\"trait\" href=\"radix_engine/types/trait.Into.html\" title=\"trait radix_engine::types::Into\">Into</a>&lt;Context&gt;,</div></h4></section></div></details>","ContextualDisplay<ManifestDecompilationDisplayContext<'a>>","radix_engine::types::ManifestValue"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()