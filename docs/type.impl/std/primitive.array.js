(function() {var type_impls = {
"radix_engine":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.PartialOrd.html\" title=\"trait radix_engine::types::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.PartialOrd.html\" title=\"trait radix_engine::types::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Option.html\" title=\"enum radix_engine::types::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine/types/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine::types::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"radix_engine/types/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","radix_engine::types::TypeHash"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"radix_engine/types/trait.Sized.html\" title=\"trait radix_engine::types::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#400\">source</a></span><a href=\"#impl-Clone-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Clone.html\" title=\"trait radix_engine::types::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Clone.html\" title=\"trait radix_engine::types::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#402\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine/types/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#407\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine/types/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.IntoIterator.html\" title=\"trait radix_engine::types::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine/types/trait.IntoIterator.html\" title=\"trait radix_engine::types::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type radix_engine::types::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Debug.html\" title=\"trait radix_engine::types::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Debug.html\" title=\"trait radix_engine::types::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine/types/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/borrow/trait.Borrow.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","radix_engine::types::TypeHash"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#167\">source</a></span><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.AsMut.html\" title=\"trait radix_engine::types::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#169\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","radix_engine::types::TypeHash"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Eq.html\" title=\"trait radix_engine::types::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Eq.html\" title=\"trait radix_engine::types::Eq\">Eq</a>,</div></h3></section>","Eq","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Ord.html\" title=\"trait radix_engine::types::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Ord.html\" title=\"trait radix_engine::types::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"radix_engine/types/trait.Ord.html#lexicographical-comparison\" title=\"trait radix_engine::types::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine::types::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"radix_engine/types/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine::types::radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"radix_engine/types/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine/types/trait.Sized.html\" title=\"trait radix_engine::types::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"radix_engine/types/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine/types/trait.Sized.html\" title=\"trait radix_engine::types::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"radix_engine/types/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine/types/trait.Sized.html\" title=\"trait radix_engine::types::Sized\">Sized</a> + <a class=\"trait\" href=\"radix_engine/types/trait.PartialOrd.html\" title=\"trait radix_engine::types::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"radix_engine/types/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","radix_engine::types::TypeHash"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Copy.html\" title=\"trait radix_engine::types::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Copy.html\" title=\"trait radix_engine::types::Copy\">Copy</a>,</div></h3></section>","Copy","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#159\">source</a></span><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.AsRef.html\" title=\"trait radix_engine::types::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#161\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#820-823\">source</a><a href=\"#impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#826\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Simd<T, N>>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine/types/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#201-203\">source</a></span><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.TryFrom.html\" title=\"trait radix_engine::types::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Copy.html\" title=\"trait radix_engine::types::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a slice <code>&amp;[T]</code>. Succeeds if\n<code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;</span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>].try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[T]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#226-228\">source</a></span><a href=\"#impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.TryFrom.html\" title=\"trait radix_engine::types::TryFrom\">TryFrom</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Copy.html\" title=\"trait radix_engine::types::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a mutable slice <code>&amp;mut [T]</code>.\nSucceeds if <code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = (<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>]).try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [T]>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3377\">source</a></span><a href=\"#impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.TryFrom.html\" title=\"trait radix_engine::types::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"radix_engine/types/node_modules/metadata/struct.Vec.html\" title=\"struct radix_engine::types::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/alloc/trait.Allocator.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3406\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(vec: <a class=\"struct\" href=\"radix_engine/types/node_modules/metadata/struct.Vec.html\" title=\"struct radix_engine::types::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"radix_engine/types/node_modules/metadata/struct.Vec.html\" title=\"struct radix_engine::types::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the entire contents of the <code>Vec&lt;T&gt;</code> as an array,\nif its size exactly matches that of the requested array.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].try_into(), <span class=\"prelude-val\">Ok</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n<span class=\"macro\">assert_eq!</span>(&lt;Vec&lt;i32&gt;&gt;::new().try_into(), <span class=\"prelude-val\">Ok</span>([]));</code></pre></div>\n<p>If the length doesn’t match, the input comes back in <code>Err</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r: <span class=\"prelude-ty\">Result</span>&lt;[i32; <span class=\"number\">4</span>], <span class=\"kw\">_</span>&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().try_into();\n<span class=\"macro\">assert_eq!</span>(r, <span class=\"prelude-val\">Err</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]));</code></pre></div>\n<p>If you’re fine with just getting a prefix of the <code>Vec&lt;T&gt;</code>,\nyou can call <a href=\"radix_engine/types/node_modules/metadata/struct.Vec.html#method.truncate\" title=\"method radix_engine::types::node_modules::metadata::Vec::truncate\"><code>.truncate(N)</code></a> first.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = String::from(<span class=\"string\">\"hello world\"</span>).into_bytes();\nv.sort();\nv.truncate(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>[a, b]: [<span class=\"kw\">_</span>; <span class=\"number\">2</span>] = v.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a, <span class=\"string\">b' '</span>);\n<span class=\"macro\">assert_eq!</span>(b, <span class=\"string\">b'd'</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"radix_engine/types/node_modules/metadata/struct.Vec.html\" title=\"struct radix_engine::types::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Vec<T, A>>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/node_modules/metadata/trait.ToMetadataEntry.html\" title=\"trait radix_engine::types::node_modules::metadata::ToMetadataEntry\">ToMetadataEntry</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/node_modules/metadata/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Option.html\" title=\"enum radix_engine::types::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.GenericMetadataValue.html\" title=\"enum radix_engine::types::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.UncheckedUrl.html\" title=\"struct radix_engine::types::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"radix_engine/types/struct.UncheckedOrigin.html\" title=\"struct radix_engine::types::UncheckedOrigin\">UncheckedOrigin</a>&gt;&gt;</h4></section></div></details>","ToMetadataEntry","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#55-56\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine/types/trait.Decoder.html\" title=\"trait radix_engine::types::Decoder\">Decoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"radix_engine/types/trait.Categorize.html\" title=\"trait radix_engine::types::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#59-62\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"enum\" href=\"radix_engine/types/enum.DecodeError.html\" title=\"enum radix_engine::types::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#120\">source</a><a href=\"#impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine/types/trait.CustomTypeKind.html\" title=\"trait radix_engine::types::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;,\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#121\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#127\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.TypeData.html\" title=\"struct radix_engine::types::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#144\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine/types/struct.TypeAggregator.html\" title=\"struct radix_engine::types::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#42-43\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine/types/trait.Encoder.html\" title=\"trait radix_engine::types::Encoder\">Encoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"radix_engine/types/trait.Categorize.html\" title=\"trait radix_engine::types::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#46\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#50\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#12\">source</a><a href=\"#impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Categorize.html\" title=\"trait radix_engine::types::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#14\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"impl\"><a href=\"#impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    sel: GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GenericArray<T, UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;&amp;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: &amp;Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Signature>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","radix_engine::types::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a href=\"#impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;BUintD8&lt;N&gt;&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uint: BUintD8&lt;N&gt;) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BUintD8<N>>","radix_engine::types::TypeHash"]],
"radix_engine_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_common::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html\" title=\"trait radix_engine_common::prelude::rust::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#400\">source</a></span><a href=\"#impl-Clone-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_common::prelude::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_common::prelude::prelude::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#402\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine_common/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#407\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine_common/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_common::prelude::prelude::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_common::prelude::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type radix_engine_common::prelude::prelude::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_common::prelude::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_common::prelude::prelude::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine_common/prelude/rust/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine_common::prelude::rust::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_common/prelude/rust/prelude/fmt/struct.Error.html\" title=\"struct radix_engine_common::prelude::rust::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine_common/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/borrow/trait.Borrow.html\" title=\"trait radix_engine_common::prelude::rust::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#167\">source</a></span><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.AsMut.html\" title=\"trait radix_engine_common::prelude::prelude::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#169\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SlicePattern-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/slice/mod.rs.html#4697\">source</a></span><a href=\"#impl-SlicePattern-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>)</span></div></span><div class='docblock'>The element type of the slice being matched on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/slice/mod.rs.html#4701\">source</a><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html#associatedtype.Item\" title=\"type core::slice::SlicePattern::Item\">Item</a>]</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>)</span></div></span><div class='docblock'>Currently, the consumers of <code>SlicePattern</code> need a slice.</div></details></div></details>","SlicePattern","radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_common::prelude::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_common::prelude::prelude::Eq\">Eq</a>,</div></h3></section>","Eq","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_common::prelude::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_common::prelude::prelude::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#lexicographical-comparison\" title=\"trait radix_engine_common::prelude::prelude::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_common::prelude::prelude::Sized\">Sized</a> + <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"radix_engine_common/prelude/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_common::prelude::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_common::prelude::prelude::Copy\">Copy</a>,</div></h3></section>","Copy","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#159\">source</a></span><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.AsRef.html\" title=\"trait radix_engine_common::prelude::prelude::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#161\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#820-823\">source</a><a href=\"#impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait radix_engine_common::prelude::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#826\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Simd<T, N>>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#201-203\">source</a></span><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_common::prelude::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a slice <code>&amp;[T]</code>. Succeeds if\n<code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;</span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>].try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[T]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#226-228\">source</a></span><a href=\"#impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_common::prelude::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a mutable slice <code>&amp;mut [T]</code>.\nSucceeds if <code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = (<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>]).try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [T]>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3377\">source</a></span><a href=\"#impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/alloc/trait.Allocator.html\" title=\"trait radix_engine_common::prelude::rust::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3406\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(vec: <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the entire contents of the <code>Vec&lt;T&gt;</code> as an array,\nif its size exactly matches that of the requested array.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].try_into(), <span class=\"prelude-val\">Ok</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n<span class=\"macro\">assert_eq!</span>(&lt;Vec&lt;i32&gt;&gt;::new().try_into(), <span class=\"prelude-val\">Ok</span>([]));</code></pre></div>\n<p>If the length doesn’t match, the input comes back in <code>Err</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r: <span class=\"prelude-ty\">Result</span>&lt;[i32; <span class=\"number\">4</span>], <span class=\"kw\">_</span>&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().try_into();\n<span class=\"macro\">assert_eq!</span>(r, <span class=\"prelude-val\">Err</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]));</code></pre></div>\n<p>If you’re fine with just getting a prefix of the <code>Vec&lt;T&gt;</code>,\nyou can call <a href=\"radix_engine_common/prelude/prelude/struct.Vec.html#method.truncate\" title=\"method radix_engine_common::prelude::prelude::Vec::truncate\"><code>.truncate(N)</code></a> first.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = String::from(<span class=\"string\">\"hello world\"</span>).into_bytes();\nv.sort();\nv.truncate(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>[a, b]: [<span class=\"kw\">_</span>; <span class=\"number\">2</span>] = v.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a, <span class=\"string\">b' '</span>);\n<span class=\"macro\">assert_eq!</span>(b, <span class=\"string\">b'd'</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Vec<T, A>>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#55-56\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/trait.Decode.html\" title=\"trait radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Decoder.html\" title=\"trait radix_engine_common::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_common/trait.Decode.html\" title=\"trait radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"radix_engine_common/trait.Categorize.html\" title=\"trait radix_engine_common::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#59-62\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#120\">source</a><a href=\"#impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Describe.html\" title=\"trait radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_common::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Describe.html\" title=\"trait radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#121\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#127\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_common::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#144\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_common::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#42-43\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/trait.Encode.html\" title=\"trait radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Encoder.html\" title=\"trait radix_engine_common::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_common/trait.Encode.html\" title=\"trait radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"radix_engine_common/trait.Categorize.html\" title=\"trait radix_engine_common::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#46\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#50\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#12\">source</a><a href=\"#impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/trait.Categorize.html\" title=\"trait radix_engine_common::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#14\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-%5BT;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/ser/impls.rs.html#163-168\">source</a><a href=\"#impl-Serialize-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/ser/impls.rs.html#163-168\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-%5BT;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/de/impls.rs.html#1252-1285\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/de/impls.rs.html#1252-1285\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromHex-for-%5Bu8;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/hex/0.4.3/src/hex/lib.rs.html#220-230\">source</a><a href=\"#impl-FromHex-for-%5Bu8;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html\" title=\"trait hex::FromHex\">FromHex</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">20</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://docs.rs/hex/0.4.3/hex/error/enum.FromHexError.html\" title=\"enum hex::error::FromHexError\">FromHexError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/hex/0.4.3/src/hex/lib.rs.html#220-230\">source</a><a href=\"#method.from_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#tymethod.from_hex\" class=\"fn\">from_hex</a>&lt;T&gt;(hex: T) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">20</a>], &lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">20</a>] as <a class=\"trait\" href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html\" title=\"trait hex::FromHex\">FromHex</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#associatedtype.Error\" title=\"type hex::FromHex::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.AsRef.html\" title=\"trait radix_engine_common::prelude::prelude::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of type <code>Self</code> from the given hex string, or fails\nwith a custom error type. <a href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#tymethod.from_hex\">Read more</a></div></details></div></details>","FromHex","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"impl\"><a href=\"#impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait radix_engine_common::prelude::prelude::From\">From</a>&lt;GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    sel: GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GenericArray<T, UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-%5BZ;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/zeroize/1.3.0/src/zeroize/lib.rs.html#277-281\">source</a><a href=\"#impl-Zeroize-for-%5BZ;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Z&gt; <a class=\"trait\" href=\"https://docs.rs/zeroize/1.3.0/zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[Z; 20]</a><div class=\"where\">where\n    Z: <a class=\"trait\" href=\"https://docs.rs/zeroize/1.3.0/zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/zeroize/1.3.0/src/zeroize/lib.rs.html#277-281\">source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/zeroize/1.3.0/zeroize/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait radix_engine_common::prelude::prelude::From\">From</a>&lt;&amp;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: &amp;Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Signature>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait radix_engine_common::prelude::prelude::From\">From</a>&lt;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2327%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2327%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1024]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 256]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 512]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2328%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2328%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2329%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2329%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2326%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2326%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2362%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2362%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 128]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2363%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2363%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 64]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2325%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2325%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#505\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#impl-AsByteSliceMut-for-%5BT;+rand::::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2048]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html\" title=\"trait rand::AsByteSliceMut\">AsByteSliceMut</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.as_byte_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.as_byte_slice_mut\" class=\"fn\">as_byte_slice_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Return a mutable reference to self as a byte slice</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://rust-random.github.io/rand/src/rand/lib.rs.html#506\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://rust-random.github.io/rand/rand/trait.AsByteSliceMut.html#tymethod.to_le\" class=\"fn\">to_le</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian platforms).</div></details></div></details>","AsByteSliceMut","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a href=\"#impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait radix_engine_common::prelude::prelude::From\">From</a>&lt;BUintD8&lt;N&gt;&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uint: BUintD8&lt;N&gt;) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BUintD8<N>>","radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/ascii.rs.html#4\">source</a><a href=\"#impl-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/ascii.rs.html#23\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_ascii\" class=\"fn\">as_ascii</a>(&amp;self) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_common::prelude::prelude::Option\">Option</a>&lt;&amp;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>ascii_char</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts this array of bytes into a array of ASCII characters,\nor returns <code>None</code> if any of the characters is non-ASCII.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(ascii_char)]\n#![feature(const_option)]\n\n</span><span class=\"kw\">const </span>HEX_DIGITS: [std::ascii::Char; <span class=\"number\">16</span>] =\n    <span class=\"kw-2\">*</span><span class=\"string\">b\"0123456789abcdef\"</span>.as_ascii().unwrap();\n\n<span class=\"macro\">assert_eq!</span>(HEX_DIGITS[<span class=\"number\">1</span>].as_str(), <span class=\"string\">\"1\"</span>);\n<span class=\"macro\">assert_eq!</span>(HEX_DIGITS[<span class=\"number\">10</span>].as_str(), <span class=\"string\">\"a\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ascii_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/ascii.rs.html#41\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_ascii_unchecked\" class=\"fn\">as_ascii_unchecked</a>(&amp;self) -&gt; &amp;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>ascii_char</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts this array of bytes into a array of ASCII characters,\nwithout checking whether they’re valid.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Every byte in the array must be in <code>0..=127</code>, or else this is UB.</p>\n</div></details></div></details>",0,"radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#454\">source</a><a href=\"#impl-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#497-499\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.map\" class=\"fn\">map</a>&lt;F, U&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[U; N]</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_common::prelude::prelude::FnMut\">FnMut</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Returns an array of the same size as <code>self</code>, with function <code>f</code> applied to each element\nin order.</p>\n<p>If you don’t necessarily need a new fixed-size array, consider using\n<a href=\"radix_engine_common/prelude/prelude/trait.Iterator.html#method.map\" title=\"method radix_engine_common::prelude::prelude::Iterator::map\"><code>Iterator::map</code></a> instead.</p>\n<h5 id=\"note-on-performance-and-stack-usage\"><a class=\"doc-anchor\" href=\"#note-on-performance-and-stack-usage\">§</a>Note on performance and stack usage</h5>\n<p>Unfortunately, usages of this method are currently not always optimized\nas well as they could be. This mainly concerns large arrays, as mapping\nover small arrays seem to be optimized just fine. Also note that in\ndebug mode (i.e. without any optimizations), this method can use a lot\nof stack space (a few times the size of the array or more).</p>\n<p>Therefore, in performance-critical code, try to avoid using this method\non large arrays or check the emitted code. Also try to avoid chained\nmaps (e.g. <code>arr.map(...).map(...)</code>).</p>\n<p>In many cases, you can instead use <a href=\"radix_engine_common/prelude/prelude/trait.Iterator.html#method.map\" title=\"method radix_engine_common::prelude::prelude::Iterator::map\"><code>Iterator::map</code></a> by calling <code>.iter()</code>\nor <code>.into_iter()</code> on your array. <code>[T; N]::map</code> is only necessary if you\nreally need a new array of the same size as the result. Rust’s lazy\niterators tend to get optimized very well.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>y = x.map(|v| v + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(y, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n\n<span class=\"kw\">let </span>x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>temp = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span>y = x.map(|v| { temp += <span class=\"number\">1</span>; v * temp });\n<span class=\"macro\">assert_eq!</span>(y, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>]);\n\n<span class=\"kw\">let </span>x = [<span class=\"string\">\"Ferris\"</span>, <span class=\"string\">\"Bueller's\"</span>, <span class=\"string\">\"Day\"</span>, <span class=\"string\">\"Off\"</span>];\n<span class=\"kw\">let </span>y = x.map(|v| v.len());\n<span class=\"macro\">assert_eq!</span>(y, [<span class=\"number\">6</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#532-536\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.try_map\" class=\"fn\">try_map</a>&lt;F, R&gt;(\n    self,\n    f: F\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html\" title=\"trait radix_engine_common::prelude::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html#associatedtype.Residual\" title=\"type radix_engine_common::prelude::rust::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Residual.html\" title=\"trait radix_engine_common::prelude::rust::ops::Residual\">Residual</a>&lt;[&lt;R as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html\" title=\"trait radix_engine_common::prelude::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html#associatedtype.Output\" title=\"type radix_engine_common::prelude::rust::ops::Try::Output\">Output</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Residual.html#associatedtype.TryType\" title=\"type radix_engine_common::prelude::rust::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_common::prelude::prelude::FnMut\">FnMut</a>(T) -&gt; R,\n    R: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html\" title=\"trait radix_engine_common::prelude::rust::ops::Try\">Try</a>,\n    &lt;R as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html\" title=\"trait radix_engine_common::prelude::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html#associatedtype.Residual\" title=\"type radix_engine_common::prelude::rust::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Residual.html\" title=\"trait radix_engine_common::prelude::rust::ops::Residual\">Residual</a>&lt;[&lt;R as <a class=\"trait\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html\" title=\"trait radix_engine_common::prelude::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_common/prelude/rust/ops/trait.Try.html#associatedtype.Output\" title=\"type radix_engine_common::prelude::rust::ops::Try::Output\">Output</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>array_try_map</code>)</span></div></span></summary><div class=\"docblock\"><p>A fallible function <code>f</code> applied to each element on array <code>self</code> in order to\nreturn an array the same size as <code>self</code> or the first error encountered.</p>\n<p>The return type of this function depends on the return type of the closure.\nIf you return <code>Result&lt;T, E&gt;</code> from the closure, you’ll get a <code>Result&lt;[T; N], E&gt;</code>.\nIf you return <code>Option&lt;T&gt;</code> from the closure, you’ll get an <code>Option&lt;[T; N]&gt;</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(array_try_map)]\n</span><span class=\"kw\">let </span>a = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];\n<span class=\"kw\">let </span>b = a.try_map(|v| v.parse::&lt;u32&gt;()).unwrap().map(|v| v + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n\n<span class=\"kw\">let </span>a = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2a\"</span>, <span class=\"string\">\"3\"</span>];\n<span class=\"kw\">let </span>b = a.try_map(|v| v.parse::&lt;u32&gt;());\n<span class=\"macro\">assert!</span>(b.is_err());\n\n<span class=\"kw\">use </span>std::num::NonZeroU32;\n<span class=\"kw\">let </span>z = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];\n<span class=\"macro\">assert_eq!</span>(z.try_map(NonZeroU32::new), <span class=\"prelude-val\">None</span>);\n<span class=\"kw\">let </span>a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>b = a.try_map(NonZeroU32::new);\n<span class=\"kw\">let </span>c = b.map(|x| x.map(NonZeroU32::get));\n<span class=\"macro\">assert_eq!</span>(c, <span class=\"prelude-val\">Some</span>(a));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0, const since 1.57.0\">1.57.0 (const: 1.57.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#544\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice containing the entire array. Equivalent to <code>&amp;s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#551\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice containing the entire array. Equivalent to\n<code>&amp;mut s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.each_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.77.0\">1.77.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#580\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.each_ref\" class=\"fn\">each_ref</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class=\"docblock\"><p>Borrows each element and returns an array of references with the same\nsize as <code>self</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>floats = [<span class=\"number\">3.1</span>, <span class=\"number\">2.7</span>, -<span class=\"number\">1.0</span>];\n<span class=\"kw\">let </span>float_refs: [<span class=\"kw-2\">&amp;</span>f64; <span class=\"number\">3</span>] = floats.each_ref();\n<span class=\"macro\">assert_eq!</span>(float_refs, [<span class=\"kw-2\">&amp;</span><span class=\"number\">3.1</span>, <span class=\"kw-2\">&amp;</span><span class=\"number\">2.7</span>, <span class=\"kw-2\">&amp;</span>-<span class=\"number\">1.0</span>]);</code></pre></div>\n<p>This method is particularly useful if combined with other methods, like\n<a href=\"#method.map\"><code>map</code></a>. This way, you can avoid moving the original\narray if its elements are not <a href=\"radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_common::prelude::prelude::Copy\"><code>Copy</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>strings = [<span class=\"string\">\"Ferris\"</span>.to_string(), <span class=\"string\">\"♥\"</span>.to_string(), <span class=\"string\">\"Rust\"</span>.to_string()];\n<span class=\"kw\">let </span>is_ascii = strings.each_ref().map(|s| s.is_ascii());\n<span class=\"macro\">assert_eq!</span>(is_ascii, [<span class=\"bool-val\">true</span>, <span class=\"bool-val\">false</span>, <span class=\"bool-val\">true</span>]);\n\n<span class=\"comment\">// We can still access the original array: it has not been moved.\n</span><span class=\"macro\">assert_eq!</span>(strings.len(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.each_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.77.0\">1.77.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#599\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.each_mut\" class=\"fn\">each_mut</a>(&amp;mut self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut T</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class=\"docblock\"><p>Borrows each element mutably and returns an array of mutable references\nwith the same size as <code>self</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>floats = [<span class=\"number\">3.1</span>, <span class=\"number\">2.7</span>, -<span class=\"number\">1.0</span>];\n<span class=\"kw\">let </span>float_refs: [<span class=\"kw-2\">&amp;mut </span>f64; <span class=\"number\">3</span>] = floats.each_mut();\n<span class=\"kw-2\">*</span>float_refs[<span class=\"number\">0</span>] = <span class=\"number\">0.0</span>;\n<span class=\"macro\">assert_eq!</span>(float_refs, [<span class=\"kw-2\">&amp;mut </span><span class=\"number\">0.0</span>, <span class=\"kw-2\">&amp;mut </span><span class=\"number\">2.7</span>, <span class=\"kw-2\">&amp;mut </span>-<span class=\"number\">1.0</span>]);\n<span class=\"macro\">assert_eq!</span>(floats, [<span class=\"number\">0.0</span>, <span class=\"number\">2.7</span>, -<span class=\"number\">1.0</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_array_ref\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#644\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.split_array_ref\" class=\"fn\">split_array_ref</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;self) -&gt; (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one array reference into two at an index.</p>\n<p>The first will contain all indices from <code>[0, M)</code> (excluding\nthe index <code>M</code> itself) and the second will contain all\nindices from <code>[M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span>v = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n\n{\n   <span class=\"kw\">let </span>(left, right) = v.split_array_ref::&lt;<span class=\"number\">0</span>&gt;();\n   <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[]);\n   <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.split_array_ref::&lt;<span class=\"number\">2</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.split_array_ref::&lt;<span class=\"number\">6</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_array_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#677\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.split_array_mut\" class=\"fn\">split_array_mut</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;mut self) -&gt; (&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>, &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one mutable array reference into two at an index.</p>\n<p>The first will contain all indices from <code>[0, M)</code> (excluding\nthe index <code>M</code> itself) and the second will contain all\nindices from <code>[M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n<span class=\"kw\">let </span>(left, right) = v.split_array_mut::&lt;<span class=\"number\">2</span>&gt;();\n<span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1</span>, <span class=\"number\">0</span>][..]);\n<span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\nleft[<span class=\"number\">1</span>] = <span class=\"number\">2</span>;\nright[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rsplit_array_ref\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#722\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.rsplit_array_ref\" class=\"fn\">rsplit_array_ref</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;self) -&gt; (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one array reference into two at an index from the end.</p>\n<p>The first will contain all indices from <code>[0, N - M)</code> (excluding\nthe index <code>N - M</code> itself) and the second will contain all\nindices from <code>[N - M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span>v = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n\n{\n   <span class=\"kw\">let </span>(left, right) = v.rsplit_array_ref::&lt;<span class=\"number\">0</span>&gt;();\n   <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n   <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.rsplit_array_ref::&lt;<span class=\"number\">2</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.rsplit_array_ref::&lt;<span class=\"number\">6</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rsplit_array_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#755\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.rsplit_array_mut\" class=\"fn\">rsplit_array_mut</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;mut self) -&gt; (&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>, &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one mutable array reference into two at an index from the end.</p>\n<p>The first will contain all indices from <code>[0, N - M)</code> (excluding\nthe index <code>N - M</code> itself) and the second will contain all\nindices from <code>[N - M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n<span class=\"kw\">let </span>(left, right) = v.rsplit_array_mut::&lt;<span class=\"number\">4</span>&gt;();\n<span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1</span>, <span class=\"number\">0</span>]);\n<span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>][..]);\nleft[<span class=\"number\">1</span>] = <span class=\"number\">2</span>;\nright[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);</code></pre></div>\n</div></details></div></details>",0,"radix_engine_common::prelude::prelude::TypeHash"]],
"radix_engine_interface":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","radix_engine_interface::prelude::prelude::TypeHash"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine_interface::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine_interface::prelude::rust::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/borrow/trait.BorrowMut.html\" title=\"trait radix_engine_interface::prelude::rust::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"radix_engine_interface/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#400\">source</a></span><a href=\"#impl-Clone-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#402\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#407\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.IndexMut.html\" title=\"trait radix_engine_interface::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.IndexMut.html\" title=\"trait radix_engine_interface::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type radix_engine_interface::prelude::prelude::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_interface::prelude::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_interface::prelude::prelude::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine_interface::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Error.html\" title=\"struct radix_engine_interface::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/borrow/trait.Borrow.html\" title=\"trait radix_engine_interface::prelude::rust::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"radix_engine_interface/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","radix_engine_interface::prelude::prelude::TypeHash"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait radix_engine_interface::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#167\">source</a></span><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.AsMut.html\" title=\"trait radix_engine_interface::prelude::prelude::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#169\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","radix_engine_interface::prelude::prelude::TypeHash"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,</div></h3></section>","Eq","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#lexicographical-comparison\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","radix_engine_interface::prelude::prelude::TypeHash"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_interface::prelude::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_interface::prelude::prelude::Copy\">Copy</a>,</div></h3></section>","Copy","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#159\">source</a></span><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.AsRef.html\" title=\"trait radix_engine_interface::prelude::prelude::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#161\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#820-823\">source</a><a href=\"#impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#826\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Simd<T, N>>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#201-203\">source</a></span><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html\" title=\"trait radix_engine_interface::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_interface::prelude::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a slice <code>&amp;[T]</code>. Succeeds if\n<code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;</span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>].try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[T]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#226-228\">source</a></span><a href=\"#impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html\" title=\"trait radix_engine_interface::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_interface::prelude::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a mutable slice <code>&amp;mut [T]</code>.\nSucceeds if <code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = (<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>]).try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [T]>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3377\">source</a></span><a href=\"#impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html\" title=\"trait radix_engine_interface::prelude::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_interface::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/alloc/trait.Allocator.html\" title=\"trait radix_engine_interface::prelude::rust::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3406\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(vec: <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_interface::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_interface::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the entire contents of the <code>Vec&lt;T&gt;</code> as an array,\nif its size exactly matches that of the requested array.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].try_into(), <span class=\"prelude-val\">Ok</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n<span class=\"macro\">assert_eq!</span>(&lt;Vec&lt;i32&gt;&gt;::new().try_into(), <span class=\"prelude-val\">Ok</span>([]));</code></pre></div>\n<p>If the length doesn’t match, the input comes back in <code>Err</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r: <span class=\"prelude-ty\">Result</span>&lt;[i32; <span class=\"number\">4</span>], <span class=\"kw\">_</span>&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().try_into();\n<span class=\"macro\">assert_eq!</span>(r, <span class=\"prelude-val\">Err</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]));</code></pre></div>\n<p>If you’re fine with just getting a prefix of the <code>Vec&lt;T&gt;</code>,\nyou can call <a href=\"radix_engine_interface/prelude/prelude/struct.Vec.html#method.truncate\" title=\"method radix_engine_interface::prelude::prelude::Vec::truncate\"><code>.truncate(N)</code></a> first.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = String::from(<span class=\"string\">\"hello world\"</span>).into_bytes();\nv.sort();\nv.truncate(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>[a, b]: [<span class=\"kw\">_</span>; <span class=\"number\">2</span>] = v.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a, <span class=\"string\">b' '</span>);\n<span class=\"macro\">assert_eq!</span>(b, <span class=\"string\">b'd'</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_interface::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Vec<T, A>>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#55-56\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Decoder.html\" title=\"trait radix_engine_interface::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#59-62\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#120\">source</a><a href=\"#impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_interface::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#121\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#127\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#144\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#42-43\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Encoder.html\" title=\"trait radix_engine_interface::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#46\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#50\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#12\">source</a><a href=\"#impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#14\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"impl\"><a href=\"#impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    sel: GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GenericArray<T, UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;&amp;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: &amp;Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Signature>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a href=\"#impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;BUintD8&lt;N&gt;&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uint: BUintD8&lt;N&gt;) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BUintD8<N>>","radix_engine_interface::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/api/node_modules/metadata/models/trait.ToMetadataEntry.html\" title=\"trait radix_engine_interface::api::node_modules::metadata::models::ToMetadataEntry\">ToMetadataEntry</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(self) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"type\" href=\"radix_engine_interface/api/node_modules/metadata/models/type.MetadataValue.html\" title=\"type radix_engine_interface::api::node_modules::metadata::models::MetadataValue\">MetadataValue</a>&gt;</h4></section></div></details>","ToMetadataEntry","radix_engine_interface::prelude::prelude::TypeHash"]],
"sbor":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.PartialOrd.html\" title=\"trait sbor::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.PartialOrd.html\" title=\"trait sbor::prelude::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Option.html\" title=\"enum sbor::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"sbor/rust/cmp/enum.Ordering.html\" title=\"enum sbor::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sbor/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sbor/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sbor/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sbor/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sbor/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","sbor::schema::type_link::TypeHash"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/marker/trait.ConstParamTy.html\" title=\"trait sbor::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/rust/marker/trait.ConstParamTy.html\" title=\"trait sbor::rust::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/hash/trait.Hash.html\" title=\"trait sbor::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/rust/hash/trait.Hash.html\" title=\"trait sbor::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sbor/rust/hash/trait.Hasher.html\" title=\"trait sbor::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sbor/rust/hash/trait.Hasher.html\" title=\"trait sbor::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sbor/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sbor/rust/hash/trait.Hasher.html\" title=\"trait sbor::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sbor/prelude/trait.Sized.html\" title=\"trait sbor::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sbor/rust/hash/trait.Hasher.html\" title=\"trait sbor::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sbor/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/ops/trait.Index.html\" title=\"trait sbor::rust::ops::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"sbor/rust/ops/trait.Index.html\" title=\"trait sbor::rust::ops::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sbor/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"sbor/rust/ops/trait.Index.html\" title=\"trait sbor::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type sbor::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"sbor/rust/ops/trait.Index.html\" title=\"trait sbor::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type sbor::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"sbor/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/borrow/trait.BorrowMut.html\" title=\"trait sbor::rust::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"sbor/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#400\">source</a></span><a href=\"#impl-Clone-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Clone.html\" title=\"trait sbor::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Clone.html\" title=\"trait sbor::prelude::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#402\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sbor/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#407\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sbor/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/ops/trait.IndexMut.html\" title=\"trait sbor::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"sbor/rust/ops/trait.IndexMut.html\" title=\"trait sbor::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/rust/ops/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"sbor/rust/ops/trait.Index.html\" title=\"trait sbor::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type sbor::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"sbor/rust/ops/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.IntoIterator.html\" title=\"trait sbor::prelude::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"sbor/prelude/trait.IntoIterator.html\" title=\"trait sbor::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"sbor/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type sbor::prelude::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sbor/prelude/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sbor/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Debug.html\" title=\"trait sbor::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Debug.html\" title=\"trait sbor::prelude::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sbor/prelude/fmt/struct.Formatter.html\" title=\"struct sbor::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sbor/prelude/fmt/struct.Error.html\" title=\"struct sbor::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sbor/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/borrow/trait.Borrow.html\" title=\"trait sbor::rust::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/rust/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"sbor/rust/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","sbor::schema::type_link::TypeHash"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/rust/marker/trait.StructuralPartialEq.html\" title=\"trait sbor::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#167\">source</a></span><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.AsMut.html\" title=\"trait sbor::prelude::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#169\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SlicePattern-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/slice/mod.rs.html#4697\">source</a></span><a href=\"#impl-SlicePattern-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>)</span></div></span><div class='docblock'>The element type of the slice being matched on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/slice/mod.rs.html#4701\">source</a><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/slice/trait.SlicePattern.html#associatedtype.Item\" title=\"type core::slice::SlicePattern::Item\">Item</a>]</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>)</span></div></span><div class='docblock'>Currently, the consumers of <code>SlicePattern</code> need a slice.</div></details></div></details>","SlicePattern","sbor::schema::type_link::TypeHash"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Eq.html\" title=\"trait sbor::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Eq.html\" title=\"trait sbor::prelude::Eq\">Eq</a>,</div></h3></section>","Eq","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Ord.html\" title=\"trait sbor::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Ord.html\" title=\"trait sbor::prelude::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"sbor/prelude/trait.Ord.html#lexicographical-comparison\" title=\"trait sbor::prelude::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"sbor/rust/cmp/enum.Ordering.html\" title=\"enum sbor::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sbor/rust/cmp/enum.Ordering.html\" title=\"enum sbor::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sbor/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"sbor/prelude/trait.Sized.html\" title=\"trait sbor::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sbor/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"sbor/prelude/trait.Sized.html\" title=\"trait sbor::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sbor/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"sbor/prelude/trait.Sized.html\" title=\"trait sbor::prelude::Sized\">Sized</a> + <a class=\"trait\" href=\"sbor/prelude/trait.PartialOrd.html\" title=\"trait sbor::prelude::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sbor/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sbor::schema::type_link::TypeHash"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Copy.html\" title=\"trait sbor::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Copy.html\" title=\"trait sbor::prelude::Copy\">Copy</a>,</div></h3></section>","Copy","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"sbor/prelude/trait.PartialEq.html\" title=\"trait sbor::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#159\">source</a></span><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.AsRef.html\" title=\"trait sbor::prelude::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#161\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#820-823\">source</a><a href=\"#impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.From.html\" title=\"trait sbor::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#826\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Simd<T, N>>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Default.html\" title=\"trait sbor::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"sbor/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#201-203\">source</a></span><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.TryFrom.html\" title=\"trait sbor::prelude::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Copy.html\" title=\"trait sbor::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a slice <code>&amp;[T]</code>. Succeeds if\n<code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;</span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>].try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sbor/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[T]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#226-228\">source</a></span><a href=\"#impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.TryFrom.html\" title=\"trait sbor::prelude::TryFrom\">TryFrom</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.Copy.html\" title=\"trait sbor::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a mutable slice <code>&amp;mut [T]</code>.\nSucceeds if <code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = (<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>]).try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sbor/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [T]>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3377\">source</a></span><a href=\"#impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/prelude/trait.TryFrom.html\" title=\"trait sbor::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sbor/prelude/vec/struct.Vec.html\" title=\"struct sbor::prelude::vec::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"sbor/rust/alloc/trait.Allocator.html\" title=\"trait sbor::rust::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3406\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(vec: <a class=\"struct\" href=\"sbor/prelude/vec/struct.Vec.html\" title=\"struct sbor::prelude::vec::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"sbor/prelude/vec/struct.Vec.html\" title=\"struct sbor::prelude::vec::Vec\">Vec</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the entire contents of the <code>Vec&lt;T&gt;</code> as an array,\nif its size exactly matches that of the requested array.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].try_into(), <span class=\"prelude-val\">Ok</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n<span class=\"macro\">assert_eq!</span>(&lt;Vec&lt;i32&gt;&gt;::new().try_into(), <span class=\"prelude-val\">Ok</span>([]));</code></pre></div>\n<p>If the length doesn’t match, the input comes back in <code>Err</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r: <span class=\"prelude-ty\">Result</span>&lt;[i32; <span class=\"number\">4</span>], <span class=\"kw\">_</span>&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().try_into();\n<span class=\"macro\">assert_eq!</span>(r, <span class=\"prelude-val\">Err</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]));</code></pre></div>\n<p>If you’re fine with just getting a prefix of the <code>Vec&lt;T&gt;</code>,\nyou can call <a href=\"sbor/prelude/vec/struct.Vec.html#method.truncate\" title=\"method sbor::prelude::vec::Vec::truncate\"><code>.truncate(N)</code></a> first.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = String::from(<span class=\"string\">\"hello world\"</span>).into_bytes();\nv.sort();\nv.truncate(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>[a, b]: [<span class=\"kw\">_</span>; <span class=\"number\">2</span>] = v.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a, <span class=\"string\">b' '</span>);\n<span class=\"macro\">assert_eq!</span>(b, <span class=\"string\">b'd'</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sbor/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sbor/prelude/vec/struct.Vec.html\" title=\"struct sbor::prelude::vec::Vec\">Vec</a>&lt;T, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Vec<T, A>>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-%5BT;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/ser/impls.rs.html#163-168\">source</a><a href=\"#impl-Serialize-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/ser/impls.rs.html#163-168\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-%5BT;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/de/impls.rs.html#1252-1285\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.197/src/serde/de/impls.rs.html#1252-1285\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromHex-for-%5Bu8;+20%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/hex/0.4.3/src/hex/lib.rs.html#220-230\">source</a><a href=\"#impl-FromHex-for-%5Bu8;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html\" title=\"trait hex::FromHex\">FromHex</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">20</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://docs.rs/hex/0.4.3/hex/error/enum.FromHexError.html\" title=\"enum hex::error::FromHexError\">FromHexError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/hex/0.4.3/src/hex/lib.rs.html#220-230\">source</a><a href=\"#method.from_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#tymethod.from_hex\" class=\"fn\">from_hex</a>&lt;T&gt;(hex: T) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">20</a>], &lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">20</a>] as <a class=\"trait\" href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html\" title=\"trait hex::FromHex\">FromHex</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#associatedtype.Error\" title=\"type hex::FromHex::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"sbor/prelude/trait.AsRef.html\" title=\"trait sbor::prelude::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Creates an instance of type <code>Self</code> from the given hex string, or fails\nwith a custom error type. <a href=\"https://docs.rs/hex/0.4.3/hex/trait.FromHex.html#tymethod.from_hex\">Read more</a></div></details></div></details>","FromHex","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#12-17\">source</a><a href=\"#impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X: <a class=\"trait\" href=\"sbor/value_kind/trait.CustomValueKind.html\" title=\"trait sbor::value_kind::CustomValueKind\">CustomValueKind</a>, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/categorize/trait.Categorize.html\" title=\"trait sbor::categorize::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#14-16\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/categorize/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"sbor/value_kind/enum.ValueKind.html\" title=\"enum sbor::value_kind::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/ascii.rs.html#4\">source</a><a href=\"#impl-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/ascii.rs.html#23\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_ascii\" class=\"fn\">as_ascii</a>(&amp;self) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Option.html\" title=\"enum sbor::prelude::Option\">Option</a>&lt;&amp;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>ascii_char</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts this array of bytes into a array of ASCII characters,\nor returns <code>None</code> if any of the characters is non-ASCII.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(ascii_char)]\n#![feature(const_option)]\n\n</span><span class=\"kw\">const </span>HEX_DIGITS: [std::ascii::Char; <span class=\"number\">16</span>] =\n    <span class=\"kw-2\">*</span><span class=\"string\">b\"0123456789abcdef\"</span>.as_ascii().unwrap();\n\n<span class=\"macro\">assert_eq!</span>(HEX_DIGITS[<span class=\"number\">1</span>].as_str(), <span class=\"string\">\"1\"</span>);\n<span class=\"macro\">assert_eq!</span>(HEX_DIGITS[<span class=\"number\">10</span>].as_str(), <span class=\"string\">\"a\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ascii_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/ascii.rs.html#41\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_ascii_unchecked\" class=\"fn\">as_ascii_unchecked</a>(&amp;self) -&gt; &amp;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>ascii_char</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts this array of bytes into a array of ASCII characters,\nwithout checking whether they’re valid.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Every byte in the array must be in <code>0..=127</code>, or else this is UB.</p>\n</div></details></div></details>",0,"sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#454\">source</a><a href=\"#impl-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#497-499\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.map\" class=\"fn\">map</a>&lt;F, U&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[U; N]</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"sbor/prelude/trait.FnMut.html\" title=\"trait sbor::prelude::FnMut\">FnMut</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Returns an array of the same size as <code>self</code>, with function <code>f</code> applied to each element\nin order.</p>\n<p>If you don’t necessarily need a new fixed-size array, consider using\n<a href=\"sbor/prelude/trait.Iterator.html#method.map\" title=\"method sbor::prelude::Iterator::map\"><code>Iterator::map</code></a> instead.</p>\n<h5 id=\"note-on-performance-and-stack-usage\"><a class=\"doc-anchor\" href=\"#note-on-performance-and-stack-usage\">§</a>Note on performance and stack usage</h5>\n<p>Unfortunately, usages of this method are currently not always optimized\nas well as they could be. This mainly concerns large arrays, as mapping\nover small arrays seem to be optimized just fine. Also note that in\ndebug mode (i.e. without any optimizations), this method can use a lot\nof stack space (a few times the size of the array or more).</p>\n<p>Therefore, in performance-critical code, try to avoid using this method\non large arrays or check the emitted code. Also try to avoid chained\nmaps (e.g. <code>arr.map(...).map(...)</code>).</p>\n<p>In many cases, you can instead use <a href=\"sbor/prelude/trait.Iterator.html#method.map\" title=\"method sbor::prelude::Iterator::map\"><code>Iterator::map</code></a> by calling <code>.iter()</code>\nor <code>.into_iter()</code> on your array. <code>[T; N]::map</code> is only necessary if you\nreally need a new array of the same size as the result. Rust’s lazy\niterators tend to get optimized very well.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>y = x.map(|v| v + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(y, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n\n<span class=\"kw\">let </span>x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>temp = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span>y = x.map(|v| { temp += <span class=\"number\">1</span>; v * temp });\n<span class=\"macro\">assert_eq!</span>(y, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>]);\n\n<span class=\"kw\">let </span>x = [<span class=\"string\">\"Ferris\"</span>, <span class=\"string\">\"Bueller's\"</span>, <span class=\"string\">\"Day\"</span>, <span class=\"string\">\"Off\"</span>];\n<span class=\"kw\">let </span>y = x.map(|v| v.len());\n<span class=\"macro\">assert_eq!</span>(y, [<span class=\"number\">6</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_map\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#532-536\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.try_map\" class=\"fn\">try_map</a>&lt;F, R&gt;(\n    self,\n    f: F\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"sbor/rust/ops/trait.Try.html\" title=\"trait sbor::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Try.html#associatedtype.Residual\" title=\"type sbor::rust::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"sbor/rust/ops/trait.Residual.html\" title=\"trait sbor::rust::ops::Residual\">Residual</a>&lt;[&lt;R as <a class=\"trait\" href=\"sbor/rust/ops/trait.Try.html\" title=\"trait sbor::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Try.html#associatedtype.Output\" title=\"type sbor::rust::ops::Try::Output\">Output</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]&gt;&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Residual.html#associatedtype.TryType\" title=\"type sbor::rust::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"sbor/prelude/trait.FnMut.html\" title=\"trait sbor::prelude::FnMut\">FnMut</a>(T) -&gt; R,\n    R: <a class=\"trait\" href=\"sbor/rust/ops/trait.Try.html\" title=\"trait sbor::rust::ops::Try\">Try</a>,\n    &lt;R as <a class=\"trait\" href=\"sbor/rust/ops/trait.Try.html\" title=\"trait sbor::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Try.html#associatedtype.Residual\" title=\"type sbor::rust::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"sbor/rust/ops/trait.Residual.html\" title=\"trait sbor::rust::ops::Residual\">Residual</a>&lt;[&lt;R as <a class=\"trait\" href=\"sbor/rust/ops/trait.Try.html\" title=\"trait sbor::rust::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"sbor/rust/ops/trait.Try.html#associatedtype.Output\" title=\"type sbor::rust::ops::Try::Output\">Output</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>array_try_map</code>)</span></div></span></summary><div class=\"docblock\"><p>A fallible function <code>f</code> applied to each element on array <code>self</code> in order to\nreturn an array the same size as <code>self</code> or the first error encountered.</p>\n<p>The return type of this function depends on the return type of the closure.\nIf you return <code>Result&lt;T, E&gt;</code> from the closure, you’ll get a <code>Result&lt;[T; N], E&gt;</code>.\nIf you return <code>Option&lt;T&gt;</code> from the closure, you’ll get an <code>Option&lt;[T; N]&gt;</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(array_try_map)]\n</span><span class=\"kw\">let </span>a = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];\n<span class=\"kw\">let </span>b = a.try_map(|v| v.parse::&lt;u32&gt;()).unwrap().map(|v| v + <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n\n<span class=\"kw\">let </span>a = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2a\"</span>, <span class=\"string\">\"3\"</span>];\n<span class=\"kw\">let </span>b = a.try_map(|v| v.parse::&lt;u32&gt;());\n<span class=\"macro\">assert!</span>(b.is_err());\n\n<span class=\"kw\">use </span>std::num::NonZeroU32;\n<span class=\"kw\">let </span>z = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];\n<span class=\"macro\">assert_eq!</span>(z.try_map(NonZeroU32::new), <span class=\"prelude-val\">None</span>);\n<span class=\"kw\">let </span>a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span>b = a.try_map(NonZeroU32::new);\n<span class=\"kw\">let </span>c = b.map(|x| x.map(NonZeroU32::get));\n<span class=\"macro\">assert_eq!</span>(c, <span class=\"prelude-val\">Some</span>(a));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0, const since 1.57.0\">1.57.0 (const: 1.57.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#544\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice containing the entire array. Equivalent to <code>&amp;s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#551\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice containing the entire array. Equivalent to\n<code>&amp;mut s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.each_ref\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.77.0\">1.77.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#580\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.each_ref\" class=\"fn\">each_ref</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class=\"docblock\"><p>Borrows each element and returns an array of references with the same\nsize as <code>self</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>floats = [<span class=\"number\">3.1</span>, <span class=\"number\">2.7</span>, -<span class=\"number\">1.0</span>];\n<span class=\"kw\">let </span>float_refs: [<span class=\"kw-2\">&amp;</span>f64; <span class=\"number\">3</span>] = floats.each_ref();\n<span class=\"macro\">assert_eq!</span>(float_refs, [<span class=\"kw-2\">&amp;</span><span class=\"number\">3.1</span>, <span class=\"kw-2\">&amp;</span><span class=\"number\">2.7</span>, <span class=\"kw-2\">&amp;</span>-<span class=\"number\">1.0</span>]);</code></pre></div>\n<p>This method is particularly useful if combined with other methods, like\n<a href=\"#method.map\"><code>map</code></a>. This way, you can avoid moving the original\narray if its elements are not <a href=\"sbor/prelude/trait.Copy.html\" title=\"trait sbor::prelude::Copy\"><code>Copy</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>strings = [<span class=\"string\">\"Ferris\"</span>.to_string(), <span class=\"string\">\"♥\"</span>.to_string(), <span class=\"string\">\"Rust\"</span>.to_string()];\n<span class=\"kw\">let </span>is_ascii = strings.each_ref().map(|s| s.is_ascii());\n<span class=\"macro\">assert_eq!</span>(is_ascii, [<span class=\"bool-val\">true</span>, <span class=\"bool-val\">false</span>, <span class=\"bool-val\">true</span>]);\n\n<span class=\"comment\">// We can still access the original array: it has not been moved.\n</span><span class=\"macro\">assert_eq!</span>(strings.len(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.each_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.77.0\">1.77.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#599\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.each_mut\" class=\"fn\">each_mut</a>(&amp;mut self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut T</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class=\"docblock\"><p>Borrows each element mutably and returns an array of mutable references\nwith the same size as <code>self</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>floats = [<span class=\"number\">3.1</span>, <span class=\"number\">2.7</span>, -<span class=\"number\">1.0</span>];\n<span class=\"kw\">let </span>float_refs: [<span class=\"kw-2\">&amp;mut </span>f64; <span class=\"number\">3</span>] = floats.each_mut();\n<span class=\"kw-2\">*</span>float_refs[<span class=\"number\">0</span>] = <span class=\"number\">0.0</span>;\n<span class=\"macro\">assert_eq!</span>(float_refs, [<span class=\"kw-2\">&amp;mut </span><span class=\"number\">0.0</span>, <span class=\"kw-2\">&amp;mut </span><span class=\"number\">2.7</span>, <span class=\"kw-2\">&amp;mut </span>-<span class=\"number\">1.0</span>]);\n<span class=\"macro\">assert_eq!</span>(floats, [<span class=\"number\">0.0</span>, <span class=\"number\">2.7</span>, -<span class=\"number\">1.0</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_array_ref\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#644\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.split_array_ref\" class=\"fn\">split_array_ref</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;self) -&gt; (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one array reference into two at an index.</p>\n<p>The first will contain all indices from <code>[0, M)</code> (excluding\nthe index <code>M</code> itself) and the second will contain all\nindices from <code>[M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span>v = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n\n{\n   <span class=\"kw\">let </span>(left, right) = v.split_array_ref::&lt;<span class=\"number\">0</span>&gt;();\n   <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[]);\n   <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.split_array_ref::&lt;<span class=\"number\">2</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.split_array_ref::&lt;<span class=\"number\">6</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_array_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#677\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.split_array_mut\" class=\"fn\">split_array_mut</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;mut self) -&gt; (&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>, &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one mutable array reference into two at an index.</p>\n<p>The first will contain all indices from <code>[0, M)</code> (excluding\nthe index <code>M</code> itself) and the second will contain all\nindices from <code>[M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n<span class=\"kw\">let </span>(left, right) = v.split_array_mut::&lt;<span class=\"number\">2</span>&gt;();\n<span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1</span>, <span class=\"number\">0</span>][..]);\n<span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\nleft[<span class=\"number\">1</span>] = <span class=\"number\">2</span>;\nright[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rsplit_array_ref\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#722\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.rsplit_array_ref\" class=\"fn\">rsplit_array_ref</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;self) -&gt; (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one array reference into two at an index from the end.</p>\n<p>The first will contain all indices from <code>[0, N - M)</code> (excluding\nthe index <code>N - M</code> itself) and the second will contain all\nindices from <code>[N - M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span>v = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n\n{\n   <span class=\"kw\">let </span>(left, right) = v.rsplit_array_ref::&lt;<span class=\"number\">0</span>&gt;();\n   <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n   <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.rsplit_array_ref::&lt;<span class=\"number\">2</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}\n\n{\n    <span class=\"kw\">let </span>(left, right) = v.rsplit_array_ref::&lt;<span class=\"number\">6</span>&gt;();\n    <span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;</span>[]);\n    <span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rsplit_array_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#755\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html#tymethod.rsplit_array_mut\" class=\"fn\">rsplit_array_mut</a>&lt;const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;(&amp;mut self) -&gt; (&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>, &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; M]</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>split_array</code>)</span></div></span></summary><div class=\"docblock\"><p>Divides one mutable array reference into two at an index from the end.</p>\n<p>The first will contain all indices from <code>[0, N - M)</code> (excluding\nthe index <code>N - M</code> itself) and the second will contain all\nindices from <code>[N - M, N)</code> (excluding the index <code>N</code> itself).</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>Panics if <code>M &gt; N</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(split_array)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>];\n<span class=\"kw\">let </span>(left, right) = v.rsplit_array_mut::&lt;<span class=\"number\">4</span>&gt;();\n<span class=\"macro\">assert_eq!</span>(left, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">1</span>, <span class=\"number\">0</span>]);\n<span class=\"macro\">assert_eq!</span>(right, <span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>][..]);\nleft[<span class=\"number\">1</span>] = <span class=\"number\">2</span>;\nright[<span class=\"number\">1</span>] = <span class=\"number\">4</span>;\n<span class=\"macro\">assert_eq!</span>(v, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);</code></pre></div>\n</div></details></div></details>",0,"sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#42-53\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X: <a class=\"trait\" href=\"sbor/value_kind/trait.CustomValueKind.html\" title=\"trait sbor::value_kind::CustomValueKind\">CustomValueKind</a>, E: <a class=\"trait\" href=\"sbor/encoder/trait.Encoder.html\" title=\"trait sbor::encoder::Encoder\">Encoder</a>&lt;X&gt;, T: <a class=\"trait\" href=\"sbor/encode/trait.Encode.html\" title=\"trait sbor::encode::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"sbor/categorize/trait.Categorize.html\" title=\"trait sbor::categorize::Categorize\">Categorize</a>&lt;X&gt;, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/encode/trait.Encode.html\" title=\"trait sbor::encode::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#46-48\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/encode/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"sbor/encoder/enum.EncodeError.html\" title=\"enum sbor::encoder::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#50-52\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/encode/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"sbor/encoder/enum.EncodeError.html\" title=\"enum sbor::encoder::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"sbor/encode/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#55-88\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X: <a class=\"trait\" href=\"sbor/value_kind/trait.CustomValueKind.html\" title=\"trait sbor::value_kind::CustomValueKind\">CustomValueKind</a>, D: <a class=\"trait\" href=\"sbor/decoder/trait.Decoder.html\" title=\"trait sbor::decoder::Decoder\">Decoder</a>&lt;X&gt;, T: <a class=\"trait\" href=\"sbor/decode/trait.Decode.html\" title=\"trait sbor::decode::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"sbor/categorize/trait.Categorize.html\" title=\"trait sbor::categorize::Categorize\">Categorize</a>&lt;X&gt;, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/decode/trait.Decode.html\" title=\"trait sbor::decode::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#59-87\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/decode/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"sbor/value_kind/enum.ValueKind.html\" title=\"enum sbor::value_kind::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"sbor/prelude/enum.Result.html\" title=\"enum sbor::prelude::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"sbor/decoder/enum.DecodeError.html\" title=\"enum sbor::decoder::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"sbor/decode/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","sbor::schema::type_link::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#120-147\">source</a><a href=\"#impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"sbor/schema/custom_traits/trait.CustomTypeKind.html\" title=\"trait sbor::schema::custom_traits::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"sbor/schema/type_link/enum.RustTypeId.html\" title=\"enum sbor::schema::type_link::RustTypeId\">RustTypeId</a>&gt;, T: <a class=\"trait\" href=\"sbor/schema/describe/trait.Describe.html\" title=\"trait sbor::schema::describe::Describe\">Describe</a>&lt;C&gt;, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sbor/schema/describe/trait.Describe.html\" title=\"trait sbor::schema::describe::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#121-125\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"sbor/schema/describe/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"sbor/schema/type_link/enum.RustTypeId.html\" title=\"enum sbor::schema::type_link::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"sbor/schema/describe/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#127-142\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/schema/describe/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"sbor/schema/type_data/struct.TypeData.html\" title=\"struct sbor::schema::type_data::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"sbor/schema/type_link/enum.RustTypeId.html\" title=\"enum sbor::schema::type_link::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"sbor/schema/describe/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#144-146\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sbor/schema/describe/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"sbor/schema/type_aggregator/struct.TypeAggregator.html\" title=\"struct sbor::schema::type_aggregator::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"sbor/schema/describe/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","sbor::schema::type_link::TypeHash"]],
"scrypto":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.PartialOrd.html\" title=\"trait scrypto::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.PartialOrd.html\" title=\"trait scrypto::prelude::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Option.html\" title=\"enum scrypto::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"scrypto/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","scrypto::prelude::TypeHash"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"scrypto/prelude/trait.Sized.html\" title=\"trait scrypto::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#400\">source</a></span><a href=\"#impl-Clone-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Clone.html\" title=\"trait scrypto::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Clone.html\" title=\"trait scrypto::prelude::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#402\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"scrypto/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#407\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"scrypto/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.IntoIterator.html\" title=\"trait scrypto::prelude::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"scrypto/prelude/trait.IntoIterator.html\" title=\"trait scrypto::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type scrypto::prelude::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Debug.html\" title=\"trait scrypto::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Debug.html\" title=\"trait scrypto::prelude::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/borrow/trait.Borrow.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","scrypto::prelude::TypeHash"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#167\">source</a></span><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.AsMut.html\" title=\"trait scrypto::prelude::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#169\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","scrypto::prelude::TypeHash"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Eq.html\" title=\"trait scrypto::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Eq.html\" title=\"trait scrypto::prelude::Eq\">Eq</a>,</div></h3></section>","Eq","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Ord.html\" title=\"trait scrypto::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Ord.html\" title=\"trait scrypto::prelude::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"scrypto/prelude/trait.Ord.html#lexicographical-comparison\" title=\"trait scrypto::prelude::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto::prelude::radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"scrypto/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"scrypto/prelude/trait.Sized.html\" title=\"trait scrypto::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"scrypto/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"scrypto/prelude/trait.Sized.html\" title=\"trait scrypto::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"scrypto/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"scrypto/prelude/trait.Sized.html\" title=\"trait scrypto::prelude::Sized\">Sized</a> + <a class=\"trait\" href=\"scrypto/prelude/trait.PartialOrd.html\" title=\"trait scrypto::prelude::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"scrypto/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","scrypto::prelude::TypeHash"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Copy.html\" title=\"trait scrypto::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Copy.html\" title=\"trait scrypto::prelude::Copy\">Copy</a>,</div></h3></section>","Copy","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#159\">source</a></span><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.AsRef.html\" title=\"trait scrypto::prelude::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#161\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#820-823\">source</a><a href=\"#impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#826\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Simd<T, N>>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#201-203\">source</a></span><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.TryFrom.html\" title=\"trait scrypto::prelude::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Copy.html\" title=\"trait scrypto::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a slice <code>&amp;[T]</code>. Succeeds if\n<code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;</span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>].try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[T]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#226-228\">source</a></span><a href=\"#impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.TryFrom.html\" title=\"trait scrypto::prelude::TryFrom\">TryFrom</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Copy.html\" title=\"trait scrypto::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a mutable slice <code>&amp;mut [T]</code>.\nSucceeds if <code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = (<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>]).try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [T]>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3377\">source</a></span><a href=\"#impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.TryFrom.html\" title=\"trait scrypto::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.Vec.html\" title=\"struct scrypto::api::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/alloc/trait.Allocator.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3406\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(vec: <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.Vec.html\" title=\"struct scrypto::api::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.Vec.html\" title=\"struct scrypto::api::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the entire contents of the <code>Vec&lt;T&gt;</code> as an array,\nif its size exactly matches that of the requested array.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].try_into(), <span class=\"prelude-val\">Ok</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n<span class=\"macro\">assert_eq!</span>(&lt;Vec&lt;i32&gt;&gt;::new().try_into(), <span class=\"prelude-val\">Ok</span>([]));</code></pre></div>\n<p>If the length doesn’t match, the input comes back in <code>Err</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r: <span class=\"prelude-ty\">Result</span>&lt;[i32; <span class=\"number\">4</span>], <span class=\"kw\">_</span>&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().try_into();\n<span class=\"macro\">assert_eq!</span>(r, <span class=\"prelude-val\">Err</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]));</code></pre></div>\n<p>If you’re fine with just getting a prefix of the <code>Vec&lt;T&gt;</code>,\nyou can call <a href=\"scrypto/api/node_modules/metadata/struct.Vec.html#method.truncate\" title=\"method scrypto::api::node_modules::metadata::Vec::truncate\"><code>.truncate(N)</code></a> first.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = String::from(<span class=\"string\">\"hello world\"</span>).into_bytes();\nv.sort();\nv.truncate(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>[a, b]: [<span class=\"kw\">_</span>; <span class=\"number\">2</span>] = v.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a, <span class=\"string\">b' '</span>);\n<span class=\"macro\">assert_eq!</span>(b, <span class=\"string\">b'd'</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.Vec.html\" title=\"struct scrypto::api::node_modules::metadata::Vec\">Vec</a>&lt;T, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Vec<T, A>>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/api/node_modules/metadata/trait.ToMetadataEntry.html\" title=\"trait scrypto::api::node_modules::metadata::ToMetadataEntry\">ToMetadataEntry</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/api/node_modules/metadata/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Option.html\" title=\"enum scrypto::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.GenericMetadataValue.html\" title=\"enum scrypto::api::node_modules::metadata::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedUrl.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedOrigin.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedOrigin\">UncheckedOrigin</a>&gt;&gt;</h4></section></div></details>","ToMetadataEntry","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#55-56\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto/prelude/trait.Decoder.html\" title=\"trait scrypto::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#59-62\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.DecodeError.html\" title=\"enum scrypto::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#120\">source</a><a href=\"#impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#121\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#127\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto/prelude/struct.TypeData.html\" title=\"struct scrypto::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#144\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/struct.TypeAggregator.html\" title=\"struct scrypto::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#42-43\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto/prelude/trait.Encoder.html\" title=\"trait scrypto::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#46\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#50\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#12\">source</a><a href=\"#impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#14\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"impl\"><a href=\"#impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    sel: GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GenericArray<T, UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;&amp;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: &amp;Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Signature>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","scrypto::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a href=\"#impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;BUintD8&lt;N&gt;&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uint: BUintD8&lt;N&gt;) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BUintD8<N>>","scrypto::prelude::TypeHash"]],
"scrypto_test":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#364\">source</a></span><a href=\"#impl-PartialOrd-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#366\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#370\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#374\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#378\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#382\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details>","PartialOrd","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-ConstParamTy-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a>,</div></h3></section>","ConstParamTy","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#306\">source</a></span><a href=\"#impl-Hash-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"docblock\"><p>The hash of an array is the same as that of the corresponding slice,\nas required by the <code>Borrow</code> implementation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::BuildHasher;\n\n<span class=\"kw\">let </span>b = std::hash::RandomState::new();\n<span class=\"kw\">let </span>a: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"kw\">let </span>s: <span class=\"kw-2\">&amp;</span>[u8] = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0xa8</span>, <span class=\"number\">0x3c</span>, <span class=\"number\">0x09</span>];\n<span class=\"macro\">assert_eq!</span>(b.hash_one(a), b.hash_one(s));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#307\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#340-342\">source</a></span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#347\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#182\">source</a></span><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#183\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#400\">source</a></span><a href=\"#impl-Clone-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#402\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#407\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#353-355\">source</a></span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::IndexMut\">IndexMut</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#358\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/iter.rs.html#57\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::prelude::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of\nthe array (from start to end). The array cannot be used after calling\nthis unless <code>T</code> implements <code>Copy</code>, so the whole array is copied.</p>\n<p>Arrays have special behavior when calling <code>.into_iter()</code> prior to the\n2021 edition – see the <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\" title=\"primitive array\">array</a> Editions section for more information.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#313\">source</a></span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#314\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#175\">source</a></span><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/borrow/trait.Borrow.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#176\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section>","StructuralPartialEq","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#167\">source</a></span><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.AsMut.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#169\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-Eq-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#130\">source</a></span><a href=\"#impl-Eq-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Eq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Eq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Eq\">Eq</a>,</div></h3></section>","Eq","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#389\">source</a></span><a href=\"#impl-Ord-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Ord\">Ord</a>,</div></h3></section></summary><div class=\"docblock\"><p>Implements comparison of arrays <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#lexicographical-comparison\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Ord\">lexicographically</a>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#391\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Sized\">Sized</a> + <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<section id=\"impl-Copy-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.58.0\">1.58.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#397\">source</a></span><a href=\"#impl-Copy-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Copy\">Copy</a>,</div></h3></section>","Copy","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#5-7\">source</a></span><a href=\"#impl-PartialEq%3C%5BB;+N%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#10\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#14\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B; N]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#66-68\">source</a></span><a href=\"#impl-PartialEq%3C%26%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#71\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#75\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&[B]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#20-22\">source</a></span><a href=\"#impl-PartialEq%3C%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#25\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#33\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<[B]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#96-98\">source</a></span><a href=\"#impl-PartialEq%3C%26mut+%5BB%5D%3E-for-%5BA;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[A; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#101\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/equality.rs.html#105\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[B]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&mut [B]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#159\">source</a></span><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.AsRef.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#161\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#820-823\">source</a><a href=\"#impl-From%3CSimd%3CT,+N%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/trait.SimdElement.html\" title=\"trait core::core_simd::vector::SimdElement\">SimdElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/vector.rs.html#826\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vector: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/vector/struct.Simd.html\" title=\"struct core::core_simd::vector::Simd\">Simd</a>&lt;T, N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Simd<T, N>>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2333%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 28]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2330%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 31]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2355%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 6]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2338%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 23]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2350%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 11]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2361%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 0]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2341%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2340%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 21]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2349%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 12]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2335%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 26]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2345%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 16]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2352%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 9]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2348%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 13]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2344%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 17]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2360%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 1]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2339%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 22]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2357%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 4]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2354%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 7]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2347%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 14]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2359%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2337%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 24]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2334%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 27]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2332%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 29]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2343%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 18]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2336%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 25]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2346%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 15]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2342%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 19]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2351%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 10]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2356%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 5]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2331%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 30]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2358%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a></span><a href=\"#impl-Default-for-%5BT;+core::::array::%7Bimpl%2353%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#452\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 8]</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#201-203\">source</a></span><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a slice <code>&amp;[T]</code>. Succeeds if\n<code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;</span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>].try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#208\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[T]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0\">1.59.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#226-228\">source</a></span><a href=\"#impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Copy\">Copy</a>,</div></h3></section></summary><div class=\"docblock\"><p>Tries to create an array <code>[T; N]</code> by copying from a mutable slice <code>&amp;mut [T]</code>.\nSucceeds if <code>slice.len() == N</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>bytes: [u8; <span class=\"number\">3</span>] = [<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>];\n\n<span class=\"kw\">let </span>bytes_head: [u8; <span class=\"number\">2</span>] = &lt;[u8; <span class=\"number\">2</span>]&gt;::try_from(<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">0</span>..<span class=\"number\">2</span>]).unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">1</span>, u16::from_le_bytes(bytes_head));\n\n<span class=\"kw\">let </span>bytes_tail: [u8; <span class=\"number\">2</span>] = (<span class=\"kw-2\">&amp;mut </span>bytes[<span class=\"number\">1</span>..<span class=\"number\">3</span>]).try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">512</span>, u16::from_le_bytes(bytes_tail));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/array/mod.rs.html#233\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&mut [T]>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3377\">source</a></span><a href=\"#impl-TryFrom%3CVec%3CT,+A%3E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/alloc/trait.Allocator.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/alloc/vec/mod.rs.html#3406\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(vec: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the entire contents of the <code>Vec&lt;T&gt;</code> as an array,\nif its size exactly matches that of the requested array.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].try_into(), <span class=\"prelude-val\">Ok</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n<span class=\"macro\">assert_eq!</span>(&lt;Vec&lt;i32&gt;&gt;::new().try_into(), <span class=\"prelude-val\">Ok</span>([]));</code></pre></div>\n<p>If the length doesn’t match, the input comes back in <code>Err</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>r: <span class=\"prelude-ty\">Result</span>&lt;[i32; <span class=\"number\">4</span>], <span class=\"kw\">_</span>&gt; = (<span class=\"number\">0</span>..<span class=\"number\">10</span>).collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;().try_into();\n<span class=\"macro\">assert_eq!</span>(r, <span class=\"prelude-val\">Err</span>(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]));</code></pre></div>\n<p>If you’re fine with just getting a prefix of the <code>Vec&lt;T&gt;</code>,\nyou can call <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html#method.truncate\" title=\"method scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec::truncate\"><code>.truncate(N)</code></a> first.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = String::from(<span class=\"string\">\"hello world\"</span>).into_bytes();\nv.sort();\nv.truncate(<span class=\"number\">2</span>);\n<span class=\"kw\">let </span>[a, b]: [<span class=\"kw\">_</span>; <span class=\"number\">2</span>] = v.try_into().unwrap();\n<span class=\"macro\">assert_eq!</span>(a, <span class=\"string\">b' '</span>);\n<span class=\"macro\">assert_eq!</span>(b, <span class=\"string\">b'd'</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;T, A&gt;</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<Vec<T, A>>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#impl-ToMetadataEntry-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/trait.ToMetadataEntry.html\" title=\"trait scrypto_test::prelude::ToMetadataEntry\">ToMetadataEntry</a> for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#270\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/enum.GenericMetadataValue.html\" title=\"enum scrypto_test::prelude::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedUrl.html\" title=\"struct scrypto_test::prelude::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedOrigin.html\" title=\"struct scrypto_test::prelude::UncheckedOrigin\">UncheckedOrigin</a>&gt;&gt;</h4></section></div></details>","ToMetadataEntry","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#55-56\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Decoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#59-62\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#120\">source</a><a href=\"#impl-Describe%3CC%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#121\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#127\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeData.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#144\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeAggregator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#42-43\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Encoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Categorize\">Categorize</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#46\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#50\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#12\">source</a><a href=\"#impl-Categorize%3CX%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/array.rs.html#14\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"impl\"><a href=\"#impl-From%3CGenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E,+B0%3E%3E%3E-for-%5BT;+20%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    sel: GenericArray&lt;T, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 20]</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GenericArray<T, UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3C%26Signature%3E-for-%5Bu8;+ed25519::::%7Bimpl%234%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;&amp;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: &amp;Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Signature>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-%5Bu8;+ed25519::::%7Bimpl%233%7D::%7Bconstant%230%7D%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;Signature&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sig: Signature) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">64</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"impl\"><a href=\"#impl-From%3CBUintD8%3CN%3E%3E-for-%5Bu8;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;BUintD8&lt;N&gt;&gt; for [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(uint: BUintD8&lt;N&gt;) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">N</a>]</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BUintD8<N>>","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ResolvableBucketBatch-for-%5BB;+N%5D\" class=\"impl\"><a href=\"#impl-ResolvableBucketBatch-for-%5BB;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/trait.ResolvableBucketBatch.html\" title=\"trait scrypto_test::prelude::ResolvableBucketBatch\">ResolvableBucketBatch</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[B; N]</a><div class=\"where\">where\n    B: <a class=\"trait\" href=\"scrypto_test/prelude/trait.ExistingManifestBucket.html\" title=\"trait scrypto_test::prelude::ExistingManifestBucket\">ExistingManifestBucket</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.consume_and_resolve\" class=\"method trait-impl\"><a href=\"#method.consume_and_resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.ResolvableBucketBatch.html#tymethod.consume_and_resolve\" class=\"fn\">consume_and_resolve</a>(\n    self,\n    registrar: &amp;<a class=\"struct\" href=\"scrypto_test/prelude/struct.ManifestNameRegistrar.html\" title=\"struct scrypto_test::prelude::ManifestNameRegistrar\">ManifestNameRegistrar</a>\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/enum.Value.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::Value\">Value</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/enum.ManifestCustomValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::ManifestCustomValueKind\">ManifestCustomValueKind</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/enum.ManifestCustomValue.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::ManifestCustomValue\">ManifestCustomValue</a>&gt;</h4></section></div></details>","ResolvableBucketBatch","scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeHash"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()