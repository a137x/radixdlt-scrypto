(function() {var type_impls = {
"radix_engine":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1491\">source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.PartialOrd.html\" title=\"trait radix_engine::types::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1493\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Option.html\" title=\"enum radix_engine::types::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine/types/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine::types::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"radix_engine/types/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1127\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1144\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1160\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"radix_engine/types/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<section id=\"impl-ConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#574-577\">source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#582\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#839\">source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#841\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"radix_engine/types/trait.Sized.html\" title=\"trait radix_engine::types::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Clone.html\" title=\"trait radix_engine::types::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine/types/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine/types/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2331\">source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Display.html\" title=\"trait radix_engine::types::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2332\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine/types/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#535-538\">source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#543\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2323\">source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Debug.html\" title=\"trait radix_engine::types::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2325\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine/types/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1455\">source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Eq.html\" title=\"trait radix_engine::types::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Eq","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1541\">source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Ord.html\" title=\"trait radix_engine::types::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1543\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine::types::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"radix_engine/types/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine::types::radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"radix_engine/types/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1557\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"radix_engine/types/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1562\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"radix_engine/types/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1567\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"radix_engine/types/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#491-501\">source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Copy.html\" title=\"trait radix_engine::types::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Copy","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.PartialEq.html\" title=\"trait radix_engine::types::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#496-499\">source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Not.html\" title=\"trait radix_engine::types::radix_engine_common::prelude::rust::ops::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"radix_engine/types/radix_engine_common/prelude/rust/ops/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#628\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.FromStr.html\" title=\"trait radix_engine::types::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#654\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::rust::str::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"radix_engine/types/radix_engine_common/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct radix_engine::types::radix_engine_common::prelude::rust::str::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.Default.html\" title=\"trait radix_engine::types::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SingleMetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-SingleMetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/node_modules/metadata/trait.SingleMetadataVal.html\" title=\"trait radix_engine::types::node_modules::metadata::SingleMetadataVal\">SingleMetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/node_modules/metadata/trait.SingleMetadataVal.html#tymethod.to_array_metadata_value\" class=\"fn\">to_array_metadata_value</a>(\n    vec: <a class=\"struct\" href=\"radix_engine/types/node_modules/metadata/struct.Vec.html\" title=\"struct radix_engine::types::node_modules::metadata::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.GenericMetadataValue.html\" title=\"enum radix_engine::types::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.UncheckedUrl.html\" title=\"struct radix_engine::types::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"radix_engine/types/struct.UncheckedOrigin.html\" title=\"struct radix_engine::types::UncheckedOrigin\">UncheckedOrigin</a>&gt;</h4></section><section id=\"method.from_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/node_modules/metadata/trait.SingleMetadataVal.html#tymethod.from_array_metadata_value\" class=\"fn\">from_array_metadata_value</a>(\n    entry: <a class=\"enum\" href=\"radix_engine/types/enum.GenericMetadataValue.html\" title=\"enum radix_engine::types::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.UncheckedUrl.html\" title=\"struct radix_engine::types::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"radix_engine/types/struct.UncheckedOrigin.html\" title=\"struct radix_engine::types::UncheckedOrigin\">UncheckedOrigin</a>&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"struct\" href=\"radix_engine/types/node_modules/metadata/struct.Vec.html\" title=\"struct radix_engine::types::node_modules::metadata::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;, <a class=\"enum\" href=\"radix_engine/types/enum.MetadataConversionError.html\" title=\"enum radix_engine::types::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","SingleMetadataVal","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-MetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/node_modules/metadata/trait.MetadataVal.html\" title=\"trait radix_engine::types::node_modules::metadata::MetadataVal\">MetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.DISCRIMINATOR\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#associatedconstant.DISCRIMINATOR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine/types/node_modules/metadata/trait.MetadataVal.html#associatedconstant.DISCRIMINATOR\" class=\"constant\">DISCRIMINATOR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a> = 1u8</h4></section><section id=\"method.to_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/node_modules/metadata/trait.MetadataVal.html#tymethod.to_metadata_value\" class=\"fn\">to_metadata_value</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.GenericMetadataValue.html\" title=\"enum radix_engine::types::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.UncheckedUrl.html\" title=\"struct radix_engine::types::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"radix_engine/types/struct.UncheckedOrigin.html\" title=\"struct radix_engine::types::UncheckedOrigin\">UncheckedOrigin</a>&gt;</h4></section><section id=\"method.from_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/node_modules/metadata/trait.MetadataVal.html#tymethod.from_metadata_value\" class=\"fn\">from_metadata_value</a>(\n    entry: <a class=\"enum\" href=\"radix_engine/types/enum.GenericMetadataValue.html\" title=\"enum radix_engine::types::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.UncheckedUrl.html\" title=\"struct radix_engine::types::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"radix_engine/types/struct.UncheckedOrigin.html\" title=\"struct radix_engine::types::UncheckedOrigin\">UncheckedOrigin</a>&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"radix_engine/types/enum.MetadataConversionError.html\" title=\"enum radix_engine::types::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","MetadataVal","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-ToMetadataEntry-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/node_modules/metadata/trait.ToMetadataEntry.html\" title=\"trait radix_engine::types::node_modules::metadata::ToMetadataEntry\">ToMetadataEntry</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/node_modules/metadata/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Option.html\" title=\"enum radix_engine::types::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.GenericMetadataValue.html\" title=\"enum radix_engine::types::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"radix_engine/types/struct.UncheckedUrl.html\" title=\"struct radix_engine::types::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"radix_engine/types/struct.UncheckedOrigin.html\" title=\"struct radix_engine::types::UncheckedOrigin\">UncheckedOrigin</a>&gt;&gt;</h4></section></div></details>","ToMetadataEntry","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#18\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine/types/trait.Decoder.html\" title=\"trait radix_engine::types::Decoder\">Decoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#20-23\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"radix_engine/types/enum.DecodeError.html\" title=\"enum radix_engine::types::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#impl-Describe%3CC%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine/types/trait.CustomTypeKind.html\" title=\"trait radix_engine::types::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.TypeData.html\" title=\"struct radix_engine::types::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/schema/describe.rs.html#59\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine/types/struct.TypeAggregator.html\" title=\"struct radix_engine::types::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#6\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine/types/trait.Encoder.html\" title=\"trait radix_engine::types::Encoder\">Encoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#8\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#13\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#impl-Categorize%3CX%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Categorize.html\" title=\"trait radix_engine::types::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUntypedValue%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CUntypedValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;UntypedValue&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(untyped: UntypedValue) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UntypedValue>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CValue%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine/types/trait.TryFrom.html\" title=\"trait radix_engine::types::TryFrom\">TryFrom</a>&lt;Value&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"docblock\"><p>This conversion assumes that boolean values are represented by\n<a href=\"enum.Value.html#variant.I32\"><code>I32</code></a> type.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine/types/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = TryFromValueError</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(val: Value) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine/types/trait.TryFrom.html\" title=\"trait radix_engine::types::TryFrom\">TryFrom</a>&lt;Value&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine/types/trait.TryFrom.html#associatedtype.Error\" title=\"type radix_engine::types::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Value>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","radix_engine::types::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput","radix_engine::types::NonFungibleBucketContainsNonFungibleOutput","radix_engine::types::NonFungibleResourceManagerExistsOutput","radix_engine::types::NonFungibleVaultContainsNonFungibleOutput","radix_engine::types::node_modules::metadata::MetadataRemoveOutput"]],
"radix_engine_interface":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1491\">source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1493\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1127\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1144\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1160\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"radix_engine_interface/prelude/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-ConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait radix_engine_interface::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#574-577\">source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#582\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#839\">source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#841\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2331\">source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Display.html\" title=\"trait radix_engine_interface::prelude::prelude::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2332\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine_interface::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Error.html\" title=\"struct radix_engine_interface::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine_interface/prelude/prelude/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#535-538\">source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#543\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2323\">source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_interface::prelude::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2325\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine_interface::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Error.html\" title=\"struct radix_engine_interface::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait radix_engine_interface::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1455\">source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Eq","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1541\">source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1543\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1557\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1562\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1567\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"radix_engine_interface/prelude/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#491-501\">source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_interface::prelude::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Copy","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#496-499\">source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html\" title=\"trait radix_engine_interface::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Not.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#628\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FromStr.html\" title=\"trait radix_engine_interface::prelude::prelude::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#654\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct radix_engine_interface::prelude::rust::str::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct radix_engine_interface::prelude::rust::str::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#18\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Decoder.html\" title=\"trait radix_engine_interface::prelude::Decoder\">Decoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#20-23\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#impl-Describe%3CC%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_interface::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/schema/describe.rs.html#59\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#6\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Encoder.html\" title=\"trait radix_engine_interface::prelude::Encoder\">Encoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#8\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#13\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#impl-Categorize%3CX%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-ToMetadataEntry-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/api/node_modules/metadata/models/trait.ToMetadataEntry.html\" title=\"trait radix_engine_interface::api::node_modules::metadata::models::ToMetadataEntry\">ToMetadataEntry</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(self) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"type\" href=\"radix_engine_interface/api/node_modules/metadata/models/type.MetadataValue.html\" title=\"type radix_engine_interface::api::node_modules::metadata::models::MetadataValue\">MetadataValue</a>&gt;</h4></section></div></details>","ToMetadataEntry","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SingleMetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-SingleMetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/api/node_modules/metadata/models/trait.SingleMetadataVal.html\" title=\"trait radix_engine_interface::api::node_modules::metadata::models::SingleMetadataVal\">SingleMetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.SingleMetadataVal.html#tymethod.to_array_metadata_value\" class=\"fn\">to_array_metadata_value</a>(vec: <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_interface::prelude::prelude::Vec\">Vec</a>&lt;Self&gt;) -&gt; <a class=\"type\" href=\"radix_engine_interface/api/node_modules/metadata/models/type.MetadataValue.html\" title=\"type radix_engine_interface::api::node_modules::metadata::models::MetadataValue\">MetadataValue</a></h4></section><section id=\"method.from_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.SingleMetadataVal.html#tymethod.from_array_metadata_value\" class=\"fn\">from_array_metadata_value</a>(\n    entry: <a class=\"type\" href=\"radix_engine_interface/api/node_modules/metadata/models/type.MetadataValue.html\" title=\"type radix_engine_interface::api::node_modules::metadata::models::MetadataValue\">MetadataValue</a>\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Vec.html\" title=\"struct radix_engine_interface::prelude::prelude::Vec\">Vec</a>&lt;Self&gt;, <a class=\"enum\" href=\"radix_engine_interface/api/node_modules/metadata/models/enum.MetadataConversionError.html\" title=\"enum radix_engine_interface::api::node_modules::metadata::models::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","SingleMetadataVal","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-MetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/api/node_modules/metadata/models/trait.MetadataVal.html\" title=\"trait radix_engine_interface::api::node_modules::metadata::models::MetadataVal\">MetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.DISCRIMINATOR\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#associatedconstant.DISCRIMINATOR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.MetadataVal.html#associatedconstant.DISCRIMINATOR\" class=\"constant\">DISCRIMINATOR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a> = 1u8</h4></section><section id=\"method.to_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.MetadataVal.html#tymethod.to_metadata_value\" class=\"fn\">to_metadata_value</a>(self) -&gt; <a class=\"type\" href=\"radix_engine_interface/api/node_modules/metadata/models/type.MetadataValue.html\" title=\"type radix_engine_interface::api::node_modules::metadata::models::MetadataValue\">MetadataValue</a></h4></section><section id=\"method.from_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/api/node_modules/metadata/models/trait.MetadataVal.html#tymethod.from_metadata_value\" class=\"fn\">from_metadata_value</a>(\n    entry: <a class=\"type\" href=\"radix_engine_interface/api/node_modules/metadata/models/type.MetadataValue.html\" title=\"type radix_engine_interface::api::node_modules::metadata::models::MetadataValue\">MetadataValue</a>\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"radix_engine_interface/api/node_modules/metadata/models/enum.MetadataConversionError.html\" title=\"enum radix_engine_interface::api::node_modules::metadata::models::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","MetadataVal","radix_engine_interface::api::node_modules::metadata::invocations::MetadataRemoveOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCompareCurrentTimeOutput","radix_engine_interface::blueprints::consensus_manager::invocations::ValidatorAcceptsDelegatedStakeOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_bucket::NonFungibleBucketContainsNonFungibleOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerExistsOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_vault::NonFungibleVaultContainsNonFungibleOutput"]],
"scrypto":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1491\">source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.PartialOrd.html\" title=\"trait scrypto::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1493\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Option.html\" title=\"enum scrypto::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"scrypto/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1127\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1144\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1160\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"scrypto/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<section id=\"impl-ConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#574-577\">source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#582\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#839\">source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#841\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"scrypto/prelude/trait.Sized.html\" title=\"trait scrypto::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Clone.html\" title=\"trait scrypto::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"scrypto/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"scrypto/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2331\">source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Display.html\" title=\"trait scrypto::prelude::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2332\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto/prelude/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#535-538\">source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#543\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2323\">source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Debug.html\" title=\"trait scrypto::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2325\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1455\">source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Eq.html\" title=\"trait scrypto::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Eq","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1541\">source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Ord.html\" title=\"trait scrypto::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1543\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto::prelude::radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"scrypto/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1557\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"scrypto/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1562\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"scrypto/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1567\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"scrypto/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#491-501\">source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Copy.html\" title=\"trait scrypto::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Copy","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.PartialEq.html\" title=\"trait scrypto::prelude::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#496-499\">source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html\" title=\"trait scrypto::prelude::radix_engine_common::prelude::rust::ops::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"scrypto/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#628\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.FromStr.html\" title=\"trait scrypto::prelude::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#654\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::rust::str::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto/prelude/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"scrypto/prelude/radix_engine_common/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct scrypto::prelude::radix_engine_common::prelude::rust::str::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.Default.html\" title=\"trait scrypto::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SingleMetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-SingleMetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/api/node_modules/metadata/trait.SingleMetadataVal.html\" title=\"trait scrypto::api::node_modules::metadata::SingleMetadataVal\">SingleMetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/api/node_modules/metadata/trait.SingleMetadataVal.html#tymethod.to_array_metadata_value\" class=\"fn\">to_array_metadata_value</a>(\n    vec: <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.Vec.html\" title=\"struct scrypto::api::node_modules::metadata::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.GenericMetadataValue.html\" title=\"enum scrypto::api::node_modules::metadata::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedUrl.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedOrigin.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedOrigin\">UncheckedOrigin</a>&gt;</h4></section><section id=\"method.from_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/api/node_modules/metadata/trait.SingleMetadataVal.html#tymethod.from_array_metadata_value\" class=\"fn\">from_array_metadata_value</a>(\n    entry: <a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.GenericMetadataValue.html\" title=\"enum scrypto::api::node_modules::metadata::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedUrl.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedOrigin.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedOrigin\">UncheckedOrigin</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.Vec.html\" title=\"struct scrypto::api::node_modules::metadata::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;, <a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.MetadataConversionError.html\" title=\"enum scrypto::api::node_modules::metadata::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","SingleMetadataVal","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-MetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/api/node_modules/metadata/trait.MetadataVal.html\" title=\"trait scrypto::api::node_modules::metadata::MetadataVal\">MetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.DISCRIMINATOR\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#associatedconstant.DISCRIMINATOR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto/api/node_modules/metadata/trait.MetadataVal.html#associatedconstant.DISCRIMINATOR\" class=\"constant\">DISCRIMINATOR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a> = 1u8</h4></section><section id=\"method.to_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/api/node_modules/metadata/trait.MetadataVal.html#tymethod.to_metadata_value\" class=\"fn\">to_metadata_value</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.GenericMetadataValue.html\" title=\"enum scrypto::api::node_modules::metadata::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedUrl.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedOrigin.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedOrigin\">UncheckedOrigin</a>&gt;</h4></section><section id=\"method.from_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/api/node_modules/metadata/trait.MetadataVal.html#tymethod.from_metadata_value\" class=\"fn\">from_metadata_value</a>(\n    entry: <a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.GenericMetadataValue.html\" title=\"enum scrypto::api::node_modules::metadata::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedUrl.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedOrigin.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedOrigin\">UncheckedOrigin</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.MetadataConversionError.html\" title=\"enum scrypto::api::node_modules::metadata::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","MetadataVal","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-ToMetadataEntry-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/api/node_modules/metadata/trait.ToMetadataEntry.html\" title=\"trait scrypto::api::node_modules::metadata::ToMetadataEntry\">ToMetadataEntry</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/api/node_modules/metadata/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Option.html\" title=\"enum scrypto::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto/api/node_modules/metadata/enum.GenericMetadataValue.html\" title=\"enum scrypto::api::node_modules::metadata::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedUrl.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto/api/node_modules/metadata/struct.UncheckedOrigin.html\" title=\"struct scrypto::api::node_modules::metadata::UncheckedOrigin\">UncheckedOrigin</a>&gt;&gt;</h4></section></div></details>","ToMetadataEntry","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#18\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto/prelude/trait.Decoder.html\" title=\"trait scrypto::prelude::Decoder\">Decoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#20-23\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.DecodeError.html\" title=\"enum scrypto::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#impl-Describe%3CC%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto/prelude/struct.TypeData.html\" title=\"struct scrypto::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/schema/describe.rs.html#59\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/struct.TypeAggregator.html\" title=\"struct scrypto::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#6\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto/prelude/trait.Encoder.html\" title=\"trait scrypto::prelude::Encoder\">Encoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#8\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#13\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#impl-Categorize%3CX%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","scrypto::api::node_modules::metadata::MetadataRemoveOutput","scrypto::blueprints::resource::NonFungibleBucketContainsNonFungibleOutput","scrypto::blueprints::resource::NonFungibleResourceManagerExistsOutput","scrypto::blueprints::resource::NonFungibleVaultContainsNonFungibleOutput","scrypto::blueprints::consensus_manager::ConsensusManagerCompareCurrentTimeOutput","scrypto::blueprints::consensus_manager::ValidatorAcceptsDelegatedStakeOutput"]],
"scrypto_test":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1491\">source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1493\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1127\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1144\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1160\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-ConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#1068-1079\">source</a><a href=\"#impl-ConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/marker/trait.ConstParamTy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#574-577\">source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#582\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#839\">source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#841\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Sized.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hasher.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::hash::Hasher\"><code>Hasher</code></a>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2331\">source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Display.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2332\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#535-538\">source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#543\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2323\">source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#2325\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/struct.Formatter.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/fmt/struct.Error.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/marker/trait.StructuralPartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1455\">source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Eq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Eq","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1541\">source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1543\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::rust::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/cmp/enum.Ordering.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::rust::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1557\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1562\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1567\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/marker.rs.html#491-501\">source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Copy.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section>","Copy","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1444-1446\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#496-499\">source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::rust::ops::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/ops/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#628\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.FromStr.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/str/traits.rs.html#654\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::rust::str::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/rust/str/struct.ParseBoolError.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::rust::str::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/default.rs.html#159\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SingleMetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-SingleMetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/trait.SingleMetadataVal.html\" title=\"trait scrypto_test::prelude::SingleMetadataVal\">SingleMetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.SingleMetadataVal.html#tymethod.to_array_metadata_value\" class=\"fn\">to_array_metadata_value</a>(\n    vec: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/enum.GenericMetadataValue.html\" title=\"enum scrypto_test::prelude::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedUrl.html\" title=\"struct scrypto_test::prelude::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedOrigin.html\" title=\"struct scrypto_test::prelude::UncheckedOrigin\">UncheckedOrigin</a>&gt;</h4></section><section id=\"method.from_array_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_array_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.SingleMetadataVal.html#tymethod.from_array_metadata_value\" class=\"fn\">from_array_metadata_value</a>(\n    entry: <a class=\"enum\" href=\"scrypto_test/prelude/enum.GenericMetadataValue.html\" title=\"enum scrypto_test::prelude::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedUrl.html\" title=\"struct scrypto_test::prelude::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedOrigin.html\" title=\"struct scrypto_test::prelude::UncheckedOrigin\">UncheckedOrigin</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;, <a class=\"enum\" href=\"scrypto_test/prelude/enum.MetadataConversionError.html\" title=\"enum scrypto_test::prelude::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","SingleMetadataVal","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetadataVal-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-MetadataVal-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/trait.MetadataVal.html\" title=\"trait scrypto_test::prelude::MetadataVal\">MetadataVal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.DISCRIMINATOR\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#associatedconstant.DISCRIMINATOR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto_test/prelude/trait.MetadataVal.html#associatedconstant.DISCRIMINATOR\" class=\"constant\">DISCRIMINATOR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a> = 1u8</h4></section><section id=\"method.to_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.MetadataVal.html#tymethod.to_metadata_value\" class=\"fn\">to_metadata_value</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/enum.GenericMetadataValue.html\" title=\"enum scrypto_test::prelude::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedUrl.html\" title=\"struct scrypto_test::prelude::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedOrigin.html\" title=\"struct scrypto_test::prelude::UncheckedOrigin\">UncheckedOrigin</a>&gt;</h4></section><section id=\"method.from_metadata_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.from_metadata_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.MetadataVal.html#tymethod.from_metadata_value\" class=\"fn\">from_metadata_value</a>(\n    entry: <a class=\"enum\" href=\"scrypto_test/prelude/enum.GenericMetadataValue.html\" title=\"enum scrypto_test::prelude::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedUrl.html\" title=\"struct scrypto_test::prelude::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedOrigin.html\" title=\"struct scrypto_test::prelude::UncheckedOrigin\">UncheckedOrigin</a>&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"scrypto_test/prelude/enum.MetadataConversionError.html\" title=\"enum scrypto_test::prelude::MetadataConversionError\">MetadataConversionError</a>&gt;</h4></section></div></details>","MetadataVal","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToMetadataEntry-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#impl-ToMetadataEntry-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/trait.ToMetadataEntry.html\" title=\"trait scrypto_test::prelude::ToMetadataEntry\">ToMetadataEntry</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_metadata_entry\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_interface/api/node_modules/metadata/models/mod.rs.html#269\">source</a><a href=\"#method.to_metadata_entry\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.ToMetadataEntry.html#tymethod.to_metadata_entry\" class=\"fn\">to_metadata_entry</a>(\n    self\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Option.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Option\">Option</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/enum.GenericMetadataValue.html\" title=\"enum scrypto_test::prelude::GenericMetadataValue\">GenericMetadataValue</a>&lt;<a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedUrl.html\" title=\"struct scrypto_test::prelude::UncheckedUrl\">UncheckedUrl</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.UncheckedOrigin.html\" title=\"struct scrypto_test::prelude::UncheckedOrigin\">UncheckedOrigin</a>&gt;&gt;</h4></section></div></details>","ToMetadataEntry","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#18\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Decoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Decoder\">Decoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#20-23\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#impl-Describe%3CC%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#34\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeData.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/schema/describe.rs.html#59\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeAggregator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#6\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Encoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Encoder\">Encoder</a>&lt;X&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#8\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#13\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#impl-Categorize%3CX%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/boolean.rs.html#4\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUntypedValue%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CUntypedValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;UntypedValue&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(untyped: UntypedValue) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<UntypedValue>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CValue%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;Value&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"docblock\"><p>This conversion assumes that boolean values are represented by\n<a href=\"enum.Value.html#variant.I32\"><code>I32</code></a> type.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = TryFromValueError</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(val: Value) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom\">TryFrom</a>&lt;Value&gt;&gt;::<a class=\"associatedtype\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.TryFrom.html#associatedtype.Error\" title=\"type scrypto_test::prelude::radix_engine_common::prelude::prelude::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Value>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.115/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#impl-PartialEq%3CValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.115/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.115/src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.115/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","scrypto_test::prelude::MetadataRemoveOutput","scrypto_test::prelude::ConsensusManagerCompareCurrentTimeOutput","scrypto_test::prelude::ValidatorAcceptsDelegatedStakeOutput","scrypto_test::prelude::NonFungibleBucketContainsNonFungibleOutput","scrypto_test::prelude::NonFungibleResourceManagerExistsOutput","scrypto_test::prelude::NonFungibleVaultContainsNonFungibleOutput"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()