(function() {var type_impls = {
"radix_engine":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Extend.html\" title=\"trait radix_engine::types::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"radix_engine/types/trait.Extend.html\" title=\"trait radix_engine::types::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"radix_engine/types/trait.Extend.html\" title=\"trait radix_engine::types::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine/types/trait.IntoIterator.html\" title=\"trait radix_engine::types::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"radix_engine/types/trait.Iterator.html#method.unzip\" title=\"method radix_engine::types::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"radix_engine/types/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine/types/trait.From.html\" title=\"trait radix_engine::types::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine/types/trait.Decoder.html\" title=\"trait radix_engine::types::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"enum\" href=\"radix_engine/types/enum.DecodeError.html\" title=\"enum radix_engine::types::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1, T2&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine/types/trait.Decoder.html\" title=\"trait radix_engine::types::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt;,\n    T2: <a class=\"trait\" href=\"radix_engine/types/trait.Decode.html\" title=\"trait radix_engine::types::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a>, <a class=\"enum\" href=\"radix_engine/types/enum.DecodeError.html\" title=\"enum radix_engine::types::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine/types/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine/types/trait.CustomTypeKind.html\" title=\"trait radix_engine::types::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.TypeData.html\" title=\"struct radix_engine::types::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine/types/struct.TypeAggregator.html\" title=\"struct radix_engine::types::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1, T2&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine/types/trait.CustomTypeKind.html\" title=\"trait radix_engine::types::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt;,\n    T2: <a class=\"trait\" href=\"radix_engine/types/trait.Describe.html\" title=\"trait radix_engine::types::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine/types/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine/types/struct.TypeData.html\" title=\"struct radix_engine::types::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine/types/enum.RustTypeId.html\" title=\"enum radix_engine::types::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine/types/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine/types/struct.TypeAggregator.html\" title=\"struct radix_engine::types::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine/types/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1, T2&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine/types/trait.Encoder.html\" title=\"trait radix_engine::types::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt;,\n    T2: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine/types/trait.Encoder.html\" title=\"trait radix_engine::types::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine/types/trait.Encode.html\" title=\"trait radix_engine::types::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.Result.html\" title=\"enum radix_engine::types::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine/types/enum.EncodeError.html\" title=\"enum radix_engine::types::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine/types/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"radix_engine/types/trait.SborTuple.html\" title=\"trait radix_engine::types::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"radix_engine/types/trait.SborTuple.html\" title=\"trait radix_engine::types::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Categorize.html\" title=\"trait radix_engine::types::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine::types::blueprints::package::PackagePublishWasmOutput","radix_engine::types::blueprints::account::AccountCreateOutput","radix_engine::types::blueprints::identity::IdentityCreateOutput","radix_engine::types::blueprints::pool::MultiResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolContributeOutput","radix_engine::types::blueprints::pool::TwoResourcePoolRedeemOutput","radix_engine::types::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine::types::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine::types::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"radix_engine/types/trait.Categorize.html\" title=\"trait radix_engine::types::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine/types/trait.CustomValueKind.html\" title=\"trait radix_engine::types::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine/types/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine/types/enum.ValueKind.html\" title=\"enum radix_engine::types::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine::types::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"]],
"radix_engine_common":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_common::prelude::prelude::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_common::prelude::prelude::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_common::prelude::prelude::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_common::prelude::prelude::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"radix_engine_common/prelude/prelude/trait.Iterator.html#method.unzip\" title=\"method radix_engine_common::prelude::prelude::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"radix_engine_common/prelude/prelude/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","radix_engine_common::types::node_and_substate::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait radix_engine_common::prelude::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","radix_engine_common::types::node_and_substate::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1&gt; <a class=\"trait\" href=\"radix_engine_common/trait.Decode.html\" title=\"trait radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Decoder.html\" title=\"trait radix_engine_common::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_common/trait.Decode.html\" title=\"trait radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_common/trait.Decode.html\" title=\"trait radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_common::types::node_and_substate::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Describe.html\" title=\"trait radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_common::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Describe.html\" title=\"trait radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Describe.html\" title=\"trait radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_common::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_common/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_common::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_common::types::node_and_substate::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1&gt; <a class=\"trait\" href=\"radix_engine_common/trait.Encode.html\" title=\"trait radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_common/prelude/trait.Encoder.html\" title=\"trait radix_engine_common::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_common/trait.Encode.html\" title=\"trait radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_common/trait.Encode.html\" title=\"trait radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_common::types::node_and_substate::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.SborTuple.html\" title=\"trait radix_engine_common::prelude::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/prelude/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","radix_engine_common::types::node_and_substate::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"radix_engine_common/trait.Categorize.html\" title=\"trait radix_engine_common::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_common/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_common::types::node_and_substate::SortedKey"]],
"radix_engine_interface":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_interface::prelude::prelude::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_interface::prelude::prelude::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_interface::prelude::prelude::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"radix_engine_interface/prelude/prelude/trait.Iterator.html#method.unzip\" title=\"method radix_engine_interface::prelude::prelude::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Decoder.html\" title=\"trait radix_engine_interface::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1, T2&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Decoder.html\" title=\"trait radix_engine_interface::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt;,\n    T2: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_interface::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1, T2&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_interface::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T2: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1, T2&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Encoder.html\" title=\"trait radix_engine_interface::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt;,\n    T2: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Encoder.html\" title=\"trait radix_engine_interface::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.SborTuple.html\" title=\"trait radix_engine_interface::prelude::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.SborTuple.html\" title=\"trait radix_engine_interface::prelude::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_interface::blueprints::account::invocations::AccountCreateOutput","radix_engine_interface::blueprints::identity::invocations::IdentityCreateOutput","radix_engine_interface::blueprints::package::invocations::PackagePublishWasmOutput","radix_engine_interface::blueprints::pool::multi_resource_pool::invocations::MultiResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolContributeOutput","radix_engine_interface::blueprints::pool::two_resource_pool::invocations::TwoResourcePoolRedeemOutput","radix_engine_interface::blueprints::resource::fungible::fungible_resource_manager::FungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","radix_engine_interface::blueprints::resource::non_fungible::non_fungible_resource_manager::NonFungibleResourceManagerMintSingleRuidOutput","radix_engine_interface::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_interface::blueprints::consensus_manager::invocations::ConsensusManagerCreateValidatorOutput"]],
"radix_engine_queries":[["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1,)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1,), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    T16: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;,), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>,), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    T16: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8), R>","radix_engine_queries::typed_substate_layout::PackagePublishWasmOutput"]],
"radix_engine_store_interface":[],
"scrypto":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Extend.html\" title=\"trait scrypto::prelude::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"scrypto/prelude/trait.Extend.html\" title=\"trait scrypto::prelude::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"scrypto/prelude/trait.Extend.html\" title=\"trait scrypto::prelude::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto/prelude/trait.IntoIterator.html\" title=\"trait scrypto::prelude::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"scrypto/prelude/trait.Iterator.html#method.unzip\" title=\"method scrypto::prelude::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"scrypto/prelude/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.From.html\" title=\"trait scrypto::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","scrypto::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto/prelude/trait.Decoder.html\" title=\"trait scrypto::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.DecodeError.html\" title=\"enum scrypto::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto/prelude/trait.Decoder.html\" title=\"trait scrypto::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt;,\n    T2: <a class=\"trait\" href=\"scrypto/prelude/trait.Decode.html\" title=\"trait scrypto::prelude::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.DecodeError.html\" title=\"enum scrypto::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto/prelude/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto/prelude/struct.TypeData.html\" title=\"struct scrypto::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/struct.TypeAggregator.html\" title=\"struct scrypto::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T2: <a class=\"trait\" href=\"scrypto/prelude/trait.Describe.html\" title=\"trait scrypto::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto/prelude/struct.TypeData.html\" title=\"struct scrypto::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto/prelude/enum.RustTypeId.html\" title=\"enum scrypto::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto/prelude/struct.TypeAggregator.html\" title=\"struct scrypto::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto/prelude/trait.Encoder.html\" title=\"trait scrypto::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt;,\n    T2: <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto/prelude/trait.Encoder.html\" title=\"trait scrypto::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"scrypto/prelude/trait.Encode.html\" title=\"trait scrypto::prelude::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.Result.html\" title=\"enum scrypto::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto/prelude/enum.EncodeError.html\" title=\"enum scrypto::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto/prelude/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.SborTuple.html\" title=\"trait scrypto::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.SborTuple.html\" title=\"trait scrypto::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","scrypto::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto::blueprints::resource::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto::blueprints::resource::NonFungibleResourceManagerMintSingleRuidOutput","scrypto::types::SortedKey","scrypto::blueprints::account::AccountCreateOutput","scrypto::blueprints::identity::IdentityCreateOutput","scrypto::blueprints::package::PackagePublishWasmOutput","scrypto::blueprints::pool::MultiResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolContributeOutput","scrypto::blueprints::pool::TwoResourcePoolRedeemOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"scrypto/prelude/trait.Categorize.html\" title=\"trait scrypto::prelude::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto/prelude/trait.CustomValueKind.html\" title=\"trait scrypto::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto/prelude/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto/prelude/enum.ValueKind.html\" title=\"enum scrypto::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto::blueprints::consensus_manager::ConsensusManagerCreateValidatorOutput"]],
"scrypto_test":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.IntoIterator.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Iterator.html#method.unzip\" title=\"method scrypto_test::prelude::radix_engine_common::prelude::prelude::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a></span><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/tuple.rs.html#221\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; 3]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Decoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#99\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, D, T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Decoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,\n    T2: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Decode\">Decode</a>&lt;X, D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#100\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.DecodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeData.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#146\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeAggregator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#impl-Describe%3CC%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;C, T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    C: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.CustomTypeKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,\n    T2: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a> = _</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.type_data\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeData.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.RustTypeId.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#147\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.TypeAggregator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Encoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,\n    T2: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#64\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, E, T0, T1&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/trait.Encoder.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Encode\">Encode</a>&lt;X, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR valueâ€™s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#63\">source</a><a href=\"#method.encode_body\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.EncodeError.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"scrypto_test/prelude/radix_engine_common/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.SborTuple.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-SborTuple%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.SborTuple.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::SborTuple\">SborTuple</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.get_length\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.SborTuple.html#tymethod.get_length\" class=\"fn\">get_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","SborTuple<X>","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#23\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#impl-Categorize%3CX%3E-for-(A,+B,+C)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;X, A, B, C&gt; <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html\" title=\"trait scrypto_test::prelude::radix_engine_common::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    X: <a class=\"trait\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/trait.CustomValueKind.html\" title=\"trait scrypto_test::prelude::radix_engine_common::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/tuple.rs.html#24\">source</a><a href=\"#method.value_kind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/radix_engine_common/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.ValueKind.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubstateKeyContent-for-(%5Bu8;+2%5D,+Vec%3Cu8%3E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/radix_engine_store_interface/db_key_mapper.rs.html#277\">source</a><a href=\"#impl-SubstateKeyContent-for-(%5Bu8;+2%5D,+Vec%3Cu8%3E)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"scrypto_test/prelude/trait.SubstateKeyContent.html\" title=\"trait scrypto_test::prelude::SubstateKeyContent\">SubstateKeyContent</a> for ([<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">2</a>], <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/struct.Vec.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::prelude::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>&gt;)</h3></section></summary><div class=\"impl-items\"><section id=\"method.get_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/radix_engine_store_interface/db_key_mapper.rs.html#278\">source</a><a href=\"#method.get_type\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.SubstateKeyContent.html#tymethod.get_type\" class=\"fn\">get_type</a>() -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/enum.SubstateKeyTypeContentType.html\" title=\"enum scrypto_test::prelude::SubstateKeyTypeContentType\">SubstateKeyTypeContentType</a></h4></section></div></details>","SubstateKeyContent","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TuplePreparable-for-(T0,+T1)\" class=\"impl\"><a href=\"#impl-TuplePreparable-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"scrypto_test/prelude/trait.TuplePreparable.html\" title=\"trait scrypto_test::prelude::TuplePreparable\">TuplePreparable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prepare_into_concatenated_digest\" class=\"method trait-impl\"><a href=\"#method.prepare_into_concatenated_digest\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.TuplePreparable.html#tymethod.prepare_into_concatenated_digest\" class=\"fn\">prepare_into_concatenated_digest</a>(\n    decoder: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/struct.TransactionDecoder.html\" title=\"struct scrypto_test::prelude::TransactionDecoder\">TransactionDecoder</a>&lt;'_&gt;,\n    accumulator: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.HashAccumulator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::HashAccumulator\">HashAccumulator</a>\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.Summary.html\" title=\"struct scrypto_test::prelude::Summary\">Summary</a>), PrepareError&gt;</h4></section></div></details>","TuplePreparable","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TuplePreparable-for-(T0,+T1,+T2)\" class=\"impl\"><a href=\"#impl-TuplePreparable-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto_test/prelude/trait.TuplePreparable.html\" title=\"trait scrypto_test::prelude::TuplePreparable\">TuplePreparable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,\n    T2: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prepare_into_concatenated_digest\" class=\"method trait-impl\"><a href=\"#method.prepare_into_concatenated_digest\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.TuplePreparable.html#tymethod.prepare_into_concatenated_digest\" class=\"fn\">prepare_into_concatenated_digest</a>(\n    decoder: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/struct.TransactionDecoder.html\" title=\"struct scrypto_test::prelude::TransactionDecoder\">TransactionDecoder</a>&lt;'_&gt;,\n    accumulator: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.HashAccumulator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::HashAccumulator\">HashAccumulator</a>\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.Summary.html\" title=\"struct scrypto_test::prelude::Summary\">Summary</a>), PrepareError&gt;</h4></section></div></details>","TuplePreparable","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnumPreparable-for-(T0,+T1)\" class=\"impl\"><a href=\"#impl-EnumPreparable-for-(T0,+T1)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"scrypto_test/prelude/trait.EnumPreparable.html\" title=\"trait scrypto_test::prelude::EnumPreparable\">EnumPreparable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prepare_into_concatenated_digest\" class=\"method trait-impl\"><a href=\"#method.prepare_into_concatenated_digest\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.EnumPreparable.html#tymethod.prepare_into_concatenated_digest\" class=\"fn\">prepare_into_concatenated_digest</a>(\n    decoder: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/struct.TransactionDecoder.html\" title=\"struct scrypto_test::prelude::TransactionDecoder\">TransactionDecoder</a>&lt;'_&gt;,\n    accumulator: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.HashAccumulator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::HashAccumulator\">HashAccumulator</a>,\n    expected_discriminator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1)</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.Summary.html\" title=\"struct scrypto_test::prelude::Summary\">Summary</a>), PrepareError&gt;</h4></section></div></details>","EnumPreparable","scrypto_test::prelude::PackagePublishWasmOutput","scrypto_test::prelude::DbSubstateKey","scrypto_test::prelude::PartitionEntry","scrypto_test::prelude::AccountCreateOutput","scrypto_test::prelude::IdentityCreateOutput","scrypto_test::prelude::MultiResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolContributeOutput","scrypto_test::prelude::TwoResourcePoolRedeemOutput","scrypto_test::prelude::FungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerCreateRuidWithInitialSupplyOutput","scrypto_test::prelude::NonFungibleResourceManagerMintSingleRuidOutput","scrypto_test::prelude::radix_engine_common::prelude::SortedKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EnumPreparable-for-(T0,+T1,+T2)\" class=\"impl\"><a href=\"#impl-EnumPreparable-for-(T0,+T1,+T2)\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2&gt; <a class=\"trait\" href=\"scrypto_test/prelude/trait.EnumPreparable.html\" title=\"trait scrypto_test::prelude::EnumPreparable\">EnumPreparable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,\n    T1: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,\n    T2: <a class=\"trait\" href=\"scrypto_test/prelude/trait.TransactionFullChildPreparable.html\" title=\"trait scrypto_test::prelude::TransactionFullChildPreparable\">TransactionFullChildPreparable</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.prepare_into_concatenated_digest\" class=\"method trait-impl\"><a href=\"#method.prepare_into_concatenated_digest\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"scrypto_test/prelude/trait.EnumPreparable.html#tymethod.prepare_into_concatenated_digest\" class=\"fn\">prepare_into_concatenated_digest</a>(\n    decoder: &amp;mut <a class=\"struct\" href=\"scrypto_test/prelude/struct.TransactionDecoder.html\" title=\"struct scrypto_test::prelude::TransactionDecoder\">TransactionDecoder</a>&lt;'_&gt;,\n    accumulator: <a class=\"struct\" href=\"scrypto_test/prelude/radix_engine_common/prelude/struct.HashAccumulator.html\" title=\"struct scrypto_test::prelude::radix_engine_common::prelude::HashAccumulator\">HashAccumulator</a>,\n    expected_discriminator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>\n) -&gt; <a class=\"enum\" href=\"scrypto_test/prelude/radix_engine_common/prelude/prelude/enum.Result.html\" title=\"enum scrypto_test::prelude::radix_engine_common::prelude::prelude::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.tuple.html\">(T0, T1, T2)</a>, <a class=\"struct\" href=\"scrypto_test/prelude/struct.Summary.html\" title=\"struct scrypto_test::prelude::Summary\">Summary</a>), PrepareError&gt;</h4></section></div></details>","EnumPreparable","scrypto_test::prelude::ConsensusManagerCreateValidatorOutput"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()