(function() {var type_impls = {
"radix_engine_interface":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#138\">source</a><a href=\"#impl-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set. (Does not allocate.)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#150\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details></div></details>",0,"radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#157\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#162\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, hash_builder: S) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with capacity for <code>n</code> elements.\n(Does not allocate if <code>n</code> is zero.)</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#172\">source</a><h4 class=\"code-header\">pub const fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new set with <code>hash_builder</code>.</p>\n<p>This function is <code>const</code>, so it\ncan be called in <code>static</code> contexts.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#179\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#184\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the set’s <code>BuildHasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#191\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of elements in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#198\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the set contains no elements.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#203\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Iter.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Iter\">Iter</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values of the set, in their order</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#210\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Remove all elements in the set, while preserving its capacity.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#217\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the set, keeping the first <code>len</code> elements and dropping the rest.</p>\n<p>If <code>len</code> is greater than the set’s current length, this has no effect.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#234-236\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.drain\" class=\"fn\">drain</a>&lt;R&gt;(&amp;mut self, range: R) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Drain.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Drain\">Drain</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Drain&lt;&#39;_, T&gt;\">ⓘ</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.RangeBounds.html\" title=\"trait radix_engine_interface::prelude::rust::ops::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Clears the <code>IndexSet</code> in the given index range, returning those values\nas a drain iterator.</p>\n<p>The range may be any type that implements <code>RangeBounds&lt;usize&gt;</code>,\nincluding all of the <code>std::ops::Range*</code> types, or even a tuple pair of\n<code>Bound</code> start and end values. To drain the set entirely, use <code>RangeFull</code>\nlike <code>set.drain(..)</code>.</p>\n<p>This shifts down all entries following the drained range to fill the\ngap, and keeps the allocated memory for reuse.</p>\n<p><em><strong>Panics</strong></em> if the starting point is greater than the end point or if\nthe end point is greater than the length of the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#248-250\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.split_off\" class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits the collection into two at the given index.</p>\n<p>Returns a newly allocated set containing the elements in the range\n<code>[at, len)</code>. After the call, the original set will be left containing\nthe elements <code>[0, at)</code> with its previous capacity unchanged.</p>\n<p><em><strong>Panics</strong></em> if <code>at &gt; len</code>.</p>\n</div></details></div></details>",0,"radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#258-261\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#266\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#278\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.reserve_exact\" class=\"fn\">reserve_exact</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#285\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.TryReserveError.html\" title=\"struct radix_engine_interface::prelude::indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve_exact\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#297\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.try_reserve_exact\" class=\"fn\">try_reserve_exact</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.TryReserveError.html\" title=\"struct radix_engine_interface::prelude::indexmap::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to reserve capacity for <code>additional</code> more values, without over-allocating.</p>\n<p>Unlike <code>try_reserve</code>, this does not deliberately over-allocate the entry capacity to avoid\nfrequent re-allocations. However, the underlying data structures may still have internal\ncapacity requirements, and the allocator itself may give more space than requested, so this\ncannot be relied upon to be precisely minimal.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#304\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set as much as possible.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#311\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the set with a lower limit.</p>\n<p>Computes in <strong>O(n)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#323\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, value: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Insert the value into the set.</p>\n<p>If an equivalent item already exists in the set, it returns\n<code>false</code> leaving the original value in the set and without\naltering its insertion order. Otherwise, it inserts the new\nitem and returns <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#336\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.insert_full\" class=\"fn\">insert_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Insert the value into the set, and get its index.</p>\n<p>If an equivalent item already exists in the set, it returns\nthe index of the existing item and <code>false</code>, leaving the\noriginal value in the set and without altering its insertion\norder. Otherwise, it inserts the new item and returns the index\nof the inserted item and <code>true</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (amortized average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#352-354\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.difference\" class=\"fn\">difference</a>&lt;S2, 'a&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;\n) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Difference.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Difference\">Difference</a>&lt;'a, T, S2&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Difference&lt;&#39;a, T, S2&gt;\">ⓘ</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> but not <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#364-369\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;S2, 'a&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;\n) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.SymmetricDifference.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, S2&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"SymmetricDifference&lt;&#39;a, T, S, S2&gt;\">ⓘ</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in <code>self</code> or <code>other</code>,\nbut not in both.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues from <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#377-379\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;S2, 'a&gt;(\n    &amp;'a self,\n    other: &amp;'a <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;\n) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Intersection.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S2&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Intersection&lt;&#39;a, T, S2&gt;\">ⓘ</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over the values that are in both <code>self</code> and <code>other</code>.</p>\n<p>Values are produced in the same order that they appear in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#388-390\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.union\" class=\"fn\">union</a>&lt;S2, 'a&gt;(&amp;'a self, other: &amp;'a <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Union.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Union\">Union</a>&lt;'a, T, S&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Union&lt;&#39;a, T, S&gt;\">ⓘ</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return an iterator over all values that are in <code>self</code> or <code>other</code>.</p>\n<p>Values from <code>self</code> are produced in their original order, followed by\nvalues that are unique to <code>other</code> in their original order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#398-400\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if an equivalent to <code>value</code> exists in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#409-411\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return a reference to the value stored in the set, if it is present,\nelse <code>None</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#417-419\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.get_full\" class=\"fn\">get_full</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index and value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index_of\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#425-427\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.get_index_of\" class=\"fn\">get_index_of</a>&lt;Q&gt;(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return item index, if it exists in the set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#437\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, value: T) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#446\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.replace_full\" class=\"fn\">replace_full</a>(&amp;mut self, value: T) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Adds a value to the set, replacing the existing value, if any, that is\nequal to the given one, without altering its insertion order. Returns\nthe index of the item and its replaced value.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#465-467\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p><strong>NOTE:</strong> This is equivalent to <code>.swap_remove(value)</code>, if you want\nto preserve the order of the values in the set, use <code>.shift_remove(value)</code>.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#481-483\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.swap_remove\" class=\"fn\">swap_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#497-499\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.shift_remove\" class=\"fn\">shift_remove</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set, and return <code>true</code> if it was present.</p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>false</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#512-514\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.take\" class=\"fn\">take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p><strong>NOTE:</strong> This is equivalent to <code>.swap_take(value)</code>, if you need to\npreserve the order of the values in the set, use <code>.shift_take(value)</code>\ninstead.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#529-531\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.swap_take\" class=\"fn\">swap_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_take\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#546-548\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.shift_take\" class=\"fn\">shift_take</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes and returns the value in the set, if any, that is equal to the\ngiven one.</p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#560-562\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.swap_remove_full\" class=\"fn\">swap_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_full\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#574-576\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.shift_remove_full\" class=\"fn\">shift_remove_full</a>&lt;Q&gt;(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, T)&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/indexmap/trait.Equivalent.html\" title=\"trait radix_engine_interface::prelude::indexmap::Equivalent\">Equivalent</a>&lt;T&gt; + ?<a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Remove the value from the set return it and the index it had.</p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Return <code>None</code> if <code>value</code> was not in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#586\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.pop\" class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the last value</p>\n<p>This preserves the order of the remaining elements.</p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#597-599\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, keep: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_interface::prelude::prelude::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Scan through each value in the set and keep those where the\nclosure <code>keep</code> returns <code>true</code>.</p>\n<p>The elements are visited in order, and remaining elements keep their\norder.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#607-609\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#method.sort_by\" title=\"method radix_engine_interface::prelude::indexmap::IndexSet::sort_by\"><code>sort_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#617-619\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sort_by\" class=\"fn\">sort_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_interface::prelude::prelude::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison function <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time and <strong>O(n)</strong> space. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#628-630\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sorted_by\" class=\"fn\">sorted_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.IntoIter.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IntoIter&lt;T&gt;\">ⓘ</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_interface::prelude::prelude::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n<p>The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#640-642\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sort_unstable\" class=\"fn\">sort_unstable</a>(&amp;mut self)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values by their default ordering.</p>\n<p>See <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#method.sort_unstable_by\" title=\"method radix_engine_interface::prelude::indexmap::IndexSet::sort_unstable_by\"><code>sort_unstable_by</code></a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#650-652\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sort_unstable_by\" class=\"fn\">sort_unstable_by</a>&lt;F&gt;(&amp;mut self, cmp: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_interface::prelude::prelude::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using the comparison funtion <code>cmp</code>.</p>\n<p>Computes in <strong>O(n log n)</strong> time. The sort is unstable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sorted_unstable_by\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#659-661\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sorted_unstable_by\" class=\"fn\">sorted_unstable_by</a>&lt;F&gt;(self, cmp: F) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.IntoIter.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IntoIter&lt;T&gt;\">ⓘ</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_interface::prelude::prelude::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/cmp/enum.Ordering.html\" title=\"enum radix_engine_interface::prelude::rust::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p>Sort the values of the set and return a by-value iterator of\nthe values with the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort_by_cached_key\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#676-679\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.sort_by_cached_key\" class=\"fn\">sort_by_cached_key</a>&lt;K, F&gt;(&amp;mut self, sort_key: F)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Ord.html\" title=\"trait radix_engine_interface::prelude::prelude::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FnMut.html\" title=\"trait radix_engine_interface::prelude::prelude::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>) -&gt; K,</div></h4></section></summary><div class=\"docblock\"><p>Sort the set’s values in place using a key extraction function.</p>\n<p>During sorting, the function is called at most once per entry, by using temporary storage\nto remember the results of its evaluation. The order of calls to the function is\nunspecified and may change between versions of <code>indexmap</code> or the standard library.</p>\n<p>Computes in <strong>O(m n + n log n + c)</strong> time () and <strong>O(n)</strong> space, where the function is\n<strong>O(m)</strong>, <em>n</em> is the length of the map, and <em>c</em> the capacity. The sort is stable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#689\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Reverses the order of the set’s values in place.</p>\n<p>Computes in <strong>O(n)</strong> time and <strong>O(1)</strong> space.</p>\n</div></details></div></details>",0,"radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#694\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#698\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a slice of all the values in the set.</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#705\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.Box.html\" title=\"struct radix_engine_interface::prelude::prelude::Box\">Box</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts into a boxed slice of all the values in the set.</p>\n<p>Note that this will drop the inner hash table and any excess capacity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#714\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.get_index\" class=\"fn\">get_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_range\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#723\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.get_range\" class=\"fn\">get_range</a>&lt;R&gt;(&amp;self, range: R) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.RangeBounds.html\" title=\"trait radix_engine_interface::prelude::rust::ops::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a slice of values in the given range of indices.</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#732\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the first value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#739\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get the last value</p>\n<p>Computes in <strong>O(1)</strong> time.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#752\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.swap_remove_index\" class=\"fn\">swap_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <code>Vec::swap_remove</code>, the value is removed by swapping it with the\nlast element of the set and popping it off. <strong>This perturbs\nthe position of what used to be the last element!</strong></p>\n<p>Computes in <strong>O(1)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#765\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.shift_remove_index\" class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Option.html\" title=\"enum radix_engine_interface::prelude::prelude::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the value by index</p>\n<p>Valid indices are <em>0 &lt;= index &lt; self.len()</em></p>\n<p>Like <code>Vec::remove</code>, the value is removed by shifting all of the\nelements that follow it, preserving their relative order.\n<strong>This perturbs the index of all of those elements!</strong></p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_index\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#778\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.move_index\" class=\"fn\">move_index</a>(&amp;mut self, from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, to: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Moves the position of a value from one index to another\nby shifting all other values in-between.</p>\n<ul>\n<li>If <code>from &lt; to</code>, the other values will shift down while the targeted value moves up.</li>\n<li>If <code>from &gt; to</code>, the other values will shift up while the targeted value moves down.</li>\n</ul>\n<p><em><strong>Panics</strong></em> if <code>from</code> or <code>to</code> are out of bounds.</p>\n<p>Computes in <strong>O(n)</strong> time (average).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_indices\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#785\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.swap_indices\" class=\"fn\">swap_indices</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Swaps the position of two values in the set.</p>\n<p><em><strong>Panics</strong></em> if <code>a</code> or <code>b</code> are out of bounds.</p>\n</div></details></div></details>",0,"radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#914-917\">source</a><a href=\"#impl-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#920-922\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#932-934\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.is_subset\" class=\"fn\">is_subset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#940-942\">source</a><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html#tymethod.is_superset\" class=\"fn\">is_superset</a>&lt;S2&gt;(&amp;self, other: &amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>.</p>\n</div></details></div></details>",0,"radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CX,+D%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#235-236\">source</a><a href=\"#impl-Decode%3CX,+D%3E-for-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, D, T&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    D: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Decoder.html\" title=\"trait radix_engine_interface::prelude::Decoder\">Decoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_interface/trait.Decode.html\" title=\"trait radix_engine_interface::Decode\">Decode</a>&lt;X, D&gt; + <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_body_with_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#239-242\">source</a><a href=\"#method.decode_body_with_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\" class=\"fn\">decode_body_with_value_kind</a>(\n    decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut D</a>,\n    value_kind: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.DecodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::DecodeError\">DecodeError</a>&gt;</h4></section></summary><div class='docblock'>Decodes the type from the decoder, which should match a preloaded value kind. <a href=\"radix_engine_interface/trait.Decode.html#tymethod.decode_body_with_value_kind\">Read more</a></div></details></div></details>","Decode<X, D>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Describe%3CC%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#372\">source</a><a href=\"#impl-Describe%3CC%3E-for-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.CustomTypeKind.html\" title=\"trait radix_engine_interface::prelude::CustomTypeKind\">CustomTypeKind</a>&lt;<a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Describe.html\" title=\"trait radix_engine_interface::prelude::Describe\">Describe</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TYPE_ID\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#372\">source</a><a href=\"#associatedconstant.TYPE_ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\" class=\"constant\">TYPE_ID</a>: <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a> = BTreeSet&lt;T&gt;::TYPE_ID</h4></section></summary><div class='docblock'>The <code>TYPE_ID</code> should give a unique identifier for its SBOR schema type.\nAn SBOR schema type capture details about the SBOR payload, how it should be interpreted, validated and displayed. <a href=\"radix_engine_interface/prelude/trait.Describe.html#associatedconstant.TYPE_ID\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#372\">source</a><a href=\"#method.type_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\" class=\"fn\">type_data</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeData.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeData\">TypeData</a>&lt;C, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.RustTypeId.html\" title=\"enum radix_engine_interface::prelude::prelude::RustTypeId\">RustTypeId</a>&gt;</h4></section></summary><div class='docblock'>Returns the local schema for the given type. <a href=\"radix_engine_interface/prelude/trait.Describe.html#tymethod.type_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_all_dependencies\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#372\">source</a><a href=\"#method.add_all_dependencies\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\" class=\"fn\">add_all_dependencies</a>(aggregator: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/prelude/struct.TypeAggregator.html\" title=\"struct radix_engine_interface::prelude::prelude::TypeAggregator\">TypeAggregator</a>&lt;C&gt;)</h4></section></summary><div class='docblock'>For each type referenced in <code>get_local_type_data</code>, we need to ensure that the type and all of its own references\nget added to the aggregator. <a href=\"radix_engine_interface/prelude/trait.Describe.html#method.add_all_dependencies\">Read more</a></div></details></div></details>","Describe<C>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CX,+E%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#69-70\">source</a><a href=\"#impl-Encode%3CX,+E%3E-for-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, E, T&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,\n    E: <a class=\"trait\" href=\"radix_engine_interface/prelude/trait.Encoder.html\" title=\"trait radix_engine_interface::prelude::Encoder\">Encoder</a>&lt;X&gt;,\n    T: <a class=\"trait\" href=\"radix_engine_interface/trait.Encode.html\" title=\"trait radix_engine_interface::Encode\">Encode</a>&lt;X, E&gt; + <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#73\">source</a><a href=\"#method.encode_value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_value_kind\" class=\"fn\">encode_value_kind</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR value’s kind to the encoder</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_body\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#78\">source</a><a href=\"#method.encode_body\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\" class=\"fn\">encode_body</a>(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.EncodeError.html\" title=\"enum radix_engine_interface::prelude::prelude::EncodeError\">EncodeError</a>&gt;</h4></section></summary><div class='docblock'>Encodes the SBOR body of the type to the encoder. <a href=\"radix_engine_interface/trait.Encode.html#tymethod.encode_body\">Read more</a></div></details></div></details>","Encode<X, E>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Categorize%3CX%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#11\">source</a><a href=\"#impl-Categorize%3CX%3E-for-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, T&gt; <a class=\"trait\" href=\"radix_engine_interface/trait.Categorize.html\" title=\"trait radix_engine_interface::Categorize\">Categorize</a>&lt;X&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.CustomValueKind.html\" title=\"trait radix_engine_interface::prelude::prelude::CustomValueKind\">CustomValueKind</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.value_kind\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sbor/codec/collection.rs.html#11\">source</a><a href=\"#method.value_kind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/trait.Categorize.html#tymethod.value_kind\" class=\"fn\">value_kind</a>() -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.ValueKind.html\" title=\"enum radix_engine_interface::prelude::prelude::ValueKind\">ValueKind</a>&lt;X&gt;</h4></section></div></details>","Categorize<X>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeTo.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeTo.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeTo.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeFrom.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeFrom.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeFrom.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeInclusive.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeInclusive.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeInclusive.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeInclusive<usize>>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#818\">source</a><a href=\"#impl-Index%3Cusize%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"docblock\"><p>Access <code>IndexSet</code> values at indexed positions.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\n<span class=\"kw\">for </span>word <span class=\"kw\">in </span><span class=\"string\">\"Lorem ipsum dolor sit amet\"</span>.split_whitespace() {\n    set.insert(word.to_string());\n}\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"ipsum\"</span>);\nset.reverse();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"amet\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"sit\"</span>);\nset.sort();\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">0</span>], <span class=\"string\">\"Lorem\"</span>);\n<span class=\"macro\">assert_eq!</span>(set[<span class=\"number\">1</span>], <span class=\"string\">\"amet\"</span>);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set = IndexSet::new();\nset.insert(<span class=\"string\">\"foo\"</span>);\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{:?}\"</span>, set[<span class=\"number\">10</span>]); <span class=\"comment\">// panics!</span></code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#824\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value at the supplied <code>index</code>.</p>\n<p><em><strong>Panics</strong></em> if <code>index</code> is out of bounds.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<usize>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.Range.html\" title=\"struct radix_engine_interface::prelude::rust::ops::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.Range.html\" title=\"struct radix_engine_interface::prelude::rust::ops::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.Range.html\" title=\"struct radix_engine_interface::prelude::rust::ops::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3C(Bound%3Cusize%3E,+Bound%3Cusize%3E)%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;(<a class=\"enum\" href=\"radix_engine_interface/prelude/rust/ops/enum.Bound.html\" title=\"enum radix_engine_interface::prelude::rust::ops::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/ops/enum.Bound.html\" title=\"enum radix_engine_interface::prelude::rust::ops::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;)&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: (<a class=\"enum\" href=\"radix_engine_interface/prelude/rust/ops/enum.Bound.html\" title=\"enum radix_engine_interface::prelude::rust::ops::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/ops/enum.Bound.html\" title=\"enum radix_engine_interface::prelude::rust::ops::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;)\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;(<a class=\"enum\" href=\"radix_engine_interface/prelude/rust/ops/enum.Bound.html\" title=\"enum radix_engine_interface::prelude::rust::ops::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"radix_engine_interface/prelude/rust/ops/enum.Bound.html\" title=\"enum radix_engine_interface::prelude::rust::ops::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;)&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(Bound<usize>, Bound<usize>)>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeFull.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeFull.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeFull\">RangeFull</a>\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeFull.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeFull\">RangeFull</a>&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeToInclusive.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.Slice.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::Slice\">Slice</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/slice.rs.html#220-228\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeToInclusive.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; &amp;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html\" title=\"trait radix_engine_interface::prelude::rust::ops::Index\">Index</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/rust/ops/struct.RangeToInclusive.html\" title=\"struct radix_engine_interface::prelude::rust::ops::RangeToInclusive\">RangeToInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#associatedtype.Output\" title=\"type radix_engine_interface::prelude::rust::ops::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"radix_engine_interface/prelude/rust/ops/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeToInclusive<usize>>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/serde.rs.html#144-148\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, S, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,\n    E: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde/1.0.197/serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type radix_engine_interface::prelude::prelude::IntoIterator::IntoIter\">IntoIter</a>, E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/serde.rs.html#152\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(\n    self\n) -&gt; &lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" title=\"type serde::de::IntoDeserializer::Deserializer\">Deserializer</a></h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#81-84\">source</a><a href=\"#impl-Clone-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#86\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#92\">source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, other: &amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine_interface::prelude::prelude::IndexSet"],["<section id=\"impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#907-910\">source</a><a href=\"#impl-Eq-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/iter.rs.html#18\">source</a><a href=\"#impl-IntoIterator-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/set/struct.IntoIter.html\" title=\"struct radix_engine_interface::prelude::indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set/iter.rs.html#22\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt; as <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type radix_engine_interface::prelude::prelude::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/serde.rs.html#131-134\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, S&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Requires crate feature <code>&quot;serde&quot;</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/serde.rs.html#136-138\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#884-886\">source</a><a href=\"#impl-Default-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#889\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an empty <code>IndexSet</code></p>\n</div></details></div></details>","Default","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/serde.rs.html#89-92\">source</a><a href=\"#impl-Serialize-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"docblock\"><p>Requires crate feature <code>&quot;serde&quot;</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/serde.rs.html#94-96\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;Se&gt;(\n    &amp;self,\n    serializer: Se\n) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;&lt;Se as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;Se as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    Se: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#896-900\">source</a><a href=\"#impl-PartialEq%3CIndexSet%3CT,+S2%3E%3E-for-IndexSet%3CT,+S1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html\" title=\"trait radix_engine_interface::prelude::prelude::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,\n    S1: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,\n    S2: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#902\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<IndexSet<T, S2>>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#830-833\">source</a><a href=\"#impl-FromIterator%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.FromIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#835\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iterable: I) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"radix_engine_interface/prelude/prelude/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#123-125\">source</a><a href=\"#impl-Debug-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_interface::prelude::prelude::Debug\">Debug</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_interface::prelude::prelude::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#127\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine_interface::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Error.html\" title=\"struct radix_engine_interface::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-IndexSet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#844-846\">source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-IndexSet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.From.html\" title=\"trait radix_engine_interface::prelude::prelude::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#857\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>indexmap::IndexSet;\n\n<span class=\"kw\">let </span>set1 = IndexSet::from([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n<span class=\"kw\">let </span>set2: IndexSet&lt;<span class=\"kw\">_</span>&gt; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>].into();\n<span class=\"macro\">assert_eq!</span>(set1, set2);</code></pre></div>\n</div></details></div></details>","From<[T; N]>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#862-865\">source</a><a href=\"#impl-Extend%3CT%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_interface::prelude::prelude::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#867\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<T>","radix_engine_interface::prelude::prelude::IndexSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#873-876\">source</a><a href=\"#impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Extend.html\" title=\"trait radix_engine_interface::prelude::prelude::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;'a T</a>&gt; for <a class=\"struct\" href=\"radix_engine_interface/prelude/indexmap/struct.IndexSet.html\" title=\"struct radix_engine_interface::prelude::indexmap::IndexSet\">IndexSet</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Eq.html\" title=\"trait radix_engine_interface::prelude::prelude::Eq\">Eq</a> + <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Copy.html\" title=\"trait radix_engine_interface::prelude::prelude::Copy\">Copy</a> + 'a,\n    S: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/indexmap/1/src/indexmap/set.rs.html#878\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I&gt;(&amp;mut self, iterable: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.IntoIterator.html\" title=\"trait radix_engine_interface::prelude::prelude::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#376\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/core/iter/traits/collect.rs.html#384\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"radix_engine_interface/prelude/prelude/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<&'a T>","radix_engine_interface::prelude::prelude::IndexSet"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()