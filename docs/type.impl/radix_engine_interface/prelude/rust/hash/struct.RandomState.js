(function() {var type_impls = {
"radix_engine_interface":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RandomState\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#40\">source</a><a href=\"#impl-RandomState\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0\">1.7.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#55\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>RandomState</code> that is initialized with random keys.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::hash::RandomState;\n\n<span class=\"kw\">let </span>s = RandomState::new();</code></pre></div>\n</div></details></div></details>",0,"radix_engine_interface::prelude::hash_map::DefaultHashBuilder","radix_engine_interface::prelude::hash_set::DefaultHashBuilder","radix_engine_interface::prelude::index_map::DefaultHashBuilder","radix_engine_interface::prelude::index_set::DefaultHashBuilder","radix_engine_interface::prelude::non_iter_map::DefaultHashBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RandomState\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0\">1.7.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#34\">source</a></span><a href=\"#impl-Clone-for-RandomState\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Clone.html\" title=\"trait radix_engine_interface::prelude::prelude::Clone\">Clone</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#34\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"radix_engine_interface/prelude/prelude/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","radix_engine_interface::prelude::hash_map::DefaultHashBuilder","radix_engine_interface::prelude::hash_set::DefaultHashBuilder","radix_engine_interface::prelude::index_map::DefaultHashBuilder","radix_engine_interface::prelude::index_set::DefaultHashBuilder","radix_engine_interface::prelude::non_iter_map::DefaultHashBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RandomState\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.16.0\">1.16.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#157\">source</a></span><a href=\"#impl-Debug-for-RandomState\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Debug.html\" title=\"trait radix_engine_interface::prelude::prelude::Debug\">Debug</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#158\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Formatter.html\" title=\"struct radix_engine_interface::prelude::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"radix_engine_interface/prelude/prelude/enum.Result.html\" title=\"enum radix_engine_interface::prelude::prelude::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"radix_engine_interface/prelude/fmt/struct.Error.html\" title=\"struct radix_engine_interface::prelude::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"radix_engine_interface/prelude/prelude/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","radix_engine_interface::prelude::hash_map::DefaultHashBuilder","radix_engine_interface::prelude::hash_set::DefaultHashBuilder","radix_engine_interface::prelude::index_map::DefaultHashBuilder","radix_engine_interface::prelude::index_set::DefaultHashBuilder","radix_engine_interface::prelude::non_iter_map::DefaultHashBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-RandomState\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0\">1.7.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#148\">source</a></span><a href=\"#impl-Default-for-RandomState\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Default.html\" title=\"trait radix_engine_interface::prelude::prelude::Default\">Default</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#151\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/prelude/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>RandomState</code>.</p>\n</div></details></div></details>","Default","radix_engine_interface::prelude::hash_map::DefaultHashBuilder","radix_engine_interface::prelude::hash_set::DefaultHashBuilder","radix_engine_interface::prelude::index_map::DefaultHashBuilder","radix_engine_interface::prelude::index_set::DefaultHashBuilder","radix_engine_interface::prelude::non_iter_map::DefaultHashBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BuildHasher-for-RandomState\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0\">1.7.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#80\">source</a></span><a href=\"#impl-BuildHasher-for-RandomState\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::BuildHasher\">BuildHasher</a> for <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.RandomState.html\" title=\"struct radix_engine_interface::prelude::rust::hash::RandomState\">RandomState</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html#associatedtype.Hasher\" class=\"associatedtype\">Hasher</a> = <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.DefaultHasher.html\" title=\"struct radix_engine_interface::prelude::rust::hash::DefaultHasher\">DefaultHasher</a></h4></section></summary><div class='docblock'>Type of the hasher that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build_hasher\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.1/src/std/hash/random.rs.html#84\">source</a><a href=\"#method.build_hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html#tymethod.build_hasher\" class=\"fn\">build_hasher</a>(&amp;self) -&gt; <a class=\"struct\" href=\"radix_engine_interface/prelude/rust/hash/struct.DefaultHasher.html\" title=\"struct radix_engine_interface::prelude::rust::hash::DefaultHasher\">DefaultHasher</a></h4></section></summary><div class='docblock'>Creates a new hasher. <a href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html#tymethod.build_hasher\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_one\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#695-698\">source</a></span><a href=\"#method.hash_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html#method.hash_one\" class=\"fn\">hash_one</a>&lt;T&gt;(&amp;self, x: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hash.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hash\">Hash</a>,\n    Self: <a class=\"trait\" href=\"radix_engine_interface/prelude/prelude/trait.Sized.html\" title=\"trait radix_engine_interface::prelude::prelude::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html#associatedtype.Hasher\" title=\"type radix_engine_interface::prelude::rust::hash::BuildHasher::Hasher\">Hasher</a>: <a class=\"trait\" href=\"radix_engine_interface/prelude/rust/hash/trait.Hasher.html\" title=\"trait radix_engine_interface::prelude::rust::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Calculates the hash of a single value. <a href=\"radix_engine_interface/prelude/rust/hash/trait.BuildHasher.html#method.hash_one\">Read more</a></div></details></div></details>","BuildHasher","radix_engine_interface::prelude::hash_map::DefaultHashBuilder","radix_engine_interface::prelude::hash_set::DefaultHashBuilder","radix_engine_interface::prelude::index_map::DefaultHashBuilder","radix_engine_interface::prelude::index_set::DefaultHashBuilder","radix_engine_interface::prelude::non_iter_map::DefaultHashBuilder"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()