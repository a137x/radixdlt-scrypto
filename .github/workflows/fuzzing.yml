name: Fuzzing
run-name: Fuzzing ${{ github.run_number }} branch ${{ github.ref_name }} ${{ github.sha }}

on:
  workflow_dispatch:
    inputs:
      duration_hours:
        description: 'Fuzzing duration [h]'
        required: true
        default: 6
      timeout:
        description: 'AFL timeout [ms]'
        required: true
        default: 1000
      fuzz_input_mode:
        type: choice
        description: 'Fuzz input data generation mode'
        required: true
        options:
          - minimize
          - unique
          - raw
      watch_interval:
        description: 'Check fuzzing status interval [s]'
        required: true
        default: 300

env:
  CARGO_TERM_COLOR: always

jobs:
  transaction:
    name: Fuzz transaction (AFL)
    runs-on: fuzzing
    # set timeout to 7days
    timeout-minutes: 10080

    steps:
    - name: Dump GitHub context
      id: github_context_step
      run: echo '${{ toJSON(github) }}'
    - name: Dump job context
      run: echo '${{ toJSON(job) }}'
    - name: Dump steps context
      run: echo '${{ toJSON(steps) }}'
    - name: Dump runner context
      run: echo '${{ toJSON(runner) }}'
    - name: Dump strategy context
      run: echo '${{ toJSON(strategy) }}'
    - name: Dump env context
      run: echo '${{ toJSON(env) }}'
    - name: Dump var context
      run: echo '${{ toJSON(vars) }}'
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - run: |
        sudo apt-get update -qq
        sudo apt-get install parallel screen build-essential llvm cmake -y

    - name: Install nextest
      uses: taiki-e/install-action@nextest

    - name: Add wasm target
      run: rustup target add wasm32-unknown-unknown

    - name: Add wasm target (nightly)
      run: rustup +nightly target add wasm32-unknown-unknown

    - name: Setup AFL
      working-directory: fuzz-tests
      run: |
        ./install_afl.sh
        ./fuzz.sh afl machine-init

    - name: Build AFL
      working-directory: fuzz-tests
      run: |
        ./fuzz.sh afl build

    - name: Generate input for AFL
      working-directory: fuzz-tests
      run: |
        ./fuzz.sh generate-input ${{ github.event.inputs.fuzz_input_mode }}

    - name: Start AFL
      working-directory: fuzz-tests
      run: |
        # scale=0 - get rid of fractional part
        # dividing by 1 because 'scale' works only for division ;)
        # Using floating arithmetics to allow providing fractions of hours (for test purposes)
        SECONDS=$(echo "scale=0; ${{ github.event.inputs.duration_hours }} * 60 * 60 / 1" | bc)
        ./afl.sh run $SECONDS all ${{ github.event.inputs.timeout }}

    - name: Watch AFL
      working-directory: fuzz-tests
      run: |
        ./afl.sh watch ${{ github.event.inputs.watch_interval }}

    - name: Generate summary
      working-directory: fuzz-tests
      run: |
        COMMIT=$(git rev-parse --short HEAD)
        echo -e \
        "## Input params:\n \
        ${{ toJSON(github.event.inputs) }}\n \
        ## Repo:\n \
        revision: [${{ github.repository }} - $COMMIT](${{ github.server_url }}/${{ github.repository }}/commit/$COMMIT)\n \
        ## Status:\n \
        \n\`\`\`\n \
         $(cargo afl whatsup -d afl/transaction) \
        \n\`\`\`\n" > afl/summary
        cat afl/summary >> $GITHUB_STEP_SUMMARY
        find afl -type f ! -path "*/queue/*" | tee list
        tar -cvzf fuzz_transaction.tgz -T list

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: fuzz_transaction.tgz
        path: |
          fuzz-tests/fuzz_transaction.tgz
